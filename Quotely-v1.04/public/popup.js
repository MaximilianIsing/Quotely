class QuotelyPopup{constructor(){this.serverUrl="https://quotely-rmgh.onrender.com",this.lastPageTitle=null,this.lastPageUrl=null,this.isPdfPage=!1,this.isPdfUploadMode=!1,this.storageKey="quotely_last_session",this.citationsKey="quotely_citations",this.quotesKey="quotely_quotes",this.segmentStateKey="quotely_segment_state",this.tooltipElement=null,this.initializeElements(),this.attachEventListeners(),this.restoreLastSession(),this.checkPendingSegmentSelection(),this.checkPdfUploadMode()}initializeElements(){this.topicInput=document.getElementById("topic-input"),this.findQuotesBtn=document.getElementById("find-quotes-btn"),this.resultsSection=document.getElementById("results-section"),this.quotesContainer=document.getElementById("quotes-container"),this.errorMessage=document.getElementById("error-message"),this.citationFormat=document.getElementById("citation-format"),this.btnText=this.findQuotesBtn.querySelector(".btn-text"),this.searchIcon=this.findQuotesBtn.querySelector(".search-icon"),this.loadingSpinner=this.findQuotesBtn.querySelector(".loading-spinner"),this.createTooltipElement()}attachEventListeners(){this.findQuotesBtn.addEventListener("click",()=>this.findQuotes()),this.topicInput.addEventListener("keypress",t=>{"Enter"===t.key&&t.ctrlKey&&this.findQuotes()}),this.topicInput.addEventListener("input",()=>{this.saveCurrentInput()}),this.citationFormat.addEventListener("change",()=>this.updateAllCitations())}autoResizeTextarea(){this.topicInput.style.height="auto";let t=Math.min(this.topicInput.scrollHeight+4,120);this.topicInput.style.height=t+"px"}saveCurrentInput(){let t=this.topicInput.value;t.trim()&&localStorage.setItem("quotely_current_topic",t)}async findQuotes(){let t=this.topicInput.value.trim();if(!t){this.showError("Please enter a topic to search for quotes.");return}localStorage.removeItem(this.segmentStateKey),this.clearPdfDropzone(),this.clearCurrentPageQuotes();let e=document.querySelector(".container");e.classList.remove("expanded","medium-expanded","segment-expanded"),this.setLoading(!0),this.hideError(),this.hideResults();try{let[i]=await chrome.tabs.query({active:!0,currentWindow:!0}),o=i.url&&(i.url.includes(".pdf")||i.url.startsWith("file://")&&i.url.endsWith(".pdf"));this.isPdfPage=o;let a;if(o){try{let n;if(i.url.startsWith("file://")){let s=await this.getUploadedPdfInfo(i.url),r,l;if(s)r=s.fileContent,l=s.title;else{this.setLoading(!1);let d=await this.showPdfDropzone(i.title);if(!d)return;this.setLoading(!0);let c=await d.arrayBuffer();await this.saveUploadedPdfInfo(i.url,r=btoa(new Uint8Array(c).reduce((t,e)=>t+String.fromCharCode(e),"")),l=i.title||"Local PDF")}n={fileContent:r,title:l,isLocalFile:!0}}else n={url:i.url,title:i.title};let p=await fetch(`${this.serverUrl}/api/extract-pdf`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(p.ok){if((a=await p.json()).requiresSegmentation){this.setLoading(!1);let u=await this.showPdfSegmentSelector(a,a.url);if(null===u)return;let h=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:a.url,segmentIndex:u})});if(!h.ok)throw Error(`Segment retrieval failed: ${h.status}`);let g=await h.json();a={content:g.content,title:a.title,url:a.url},this.setLoading(!0)}}else throw Error(`PDF extraction failed: ${p.status}`)}catch(y){console.error("PDF extraction error:",y),"scanned_pdf_too_large"===a.error&&a.message?this.showError(a.message):this.showError("This PDF page is protected. Download this pdf locally then try again.");return}if(a&&"scanned_pdf_too_large"===a.error){this.setLoading(!1),this.showError("This PDF requires scanning but exceeds the 30-page limit for OCR processing.");return}}else{this.isPdfUploadMode&&(this.isPdfUploadMode=!1,this.clearPdfUploadState(),this.clearPdfDropzone());let m=await chrome.scripting.executeScript({target:{tabId:i.id},func(){let t=function t(){let e=document.documentElement.outerHTML,i=new DOMParser,o=i.parseFromString(e,"text/html");["script","style","noscript","iframe","embed","object","nav","header","footer","aside","menu","sidebar",".nav",".navbar",".menu",".sidebar",".footer",".header",".navigation",".breadcrumb",".pagination",".ads",".advertisement",".social",".share",".comments",".related",".recommended",".cookie-banner",".popup",".modal",".overlay"].forEach(t=>{let e=o.querySelectorAll(t);e.forEach(t=>t.remove())});let a=null;for(let n of["main","article",'[role="main"]',".content","#content",".main-content",".article-content",".post-content",".entry-content",".document-content",".page-content",".text-content",".blog-content",".post-body",".single-post",".post",".entry",".story"]){let s=o.querySelector(n);if(s&&s.textContent.trim().length>500){a=s;break}}if(!a){let r=o.body;if(r){let l=r.querySelectorAll("div, section, p"),d=null,c=0;l.forEach(t=>{let e=t.textContent.trim(),i=e.length;if(i<200||i>1e5)return;let o=t.querySelectorAll("a").length,a=t.querySelectorAll("p").length,n=t.querySelectorAll("img").length,s=3*a-o-2*n+i/100;s>c&&(c=s,d=t)}),d&&(a=d)}}a||(a=o.body||o.documentElement);let p=a?a.textContent:"";return p=p.replace(/\s+/g," ").replace(/^\s+|\s+$/g,"").replace(/[^\w\s.,!?;:'"()-]/g,"").trim()}();return{content:t,url:window.location.href,title:document.title}}}).catch(()=>[]);if(!m||0===m.length||!m[0]||!m[0].result||!m[0].result.content){this.showError("Cannot access this page content. Try another tab.");return}a=m[0].result}if(this.lastPageTitle=a.title||"Current Page",this.lastPageUrl=a.url||"Unknown URL",a.content&&a.content.length>5e4){this.setLoading(!1);let f=await this.showSegmentSelector(a.content);if(null===f)return;a.content=f,this.setLoading(!0)}let q=(a.content||"").slice(0,5e4),v=await fetch(`${this.serverUrl}/api/find-quotes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:t,pageContent:q,pageUrl:this.lastPageUrl,pageTitle:this.lastPageTitle,isOCR:a.isOCR||!1,fromPdf:this.isPdfPage||!1})});if(!v.ok){if(413===v.status){this.showError("The page is too large to analyze. Try a simpler page or select text and paste it instead.");return}throw Error(`Server error: ${v.status}`)}let x=await v.json();if(x.quotes&&x.quotes.length>0){this.lastPageTitle=x.pageTitle||this.lastPageTitle,this.lastPageUrl=x.pageUrl||this.lastPageUrl;let P=x.quotes.map(t=>({...t,fromPdf:void 0!==x.fromPdf?x.fromPdf:this.isPdfPage||!1}));this.displayQuotes(P,this.lastPageTitle,this.lastPageUrl)}else this.showError("No relevant quotes found. Try a different topic or check if the page has relevant content.")}catch(S){console.error("Error finding quotes:",S),this.showError("Failed to find quotes. The server might be offline. Please try again later.")}finally{this.setLoading(!1)}}async showPdfSegmentSelector(t,e=null){let i={isPdf:!0,pdfData:t,pdfUrl:e,topic:this.topicInput.value,pageTitle:this.lastPageTitle||t.title,pageUrl:this.lastPageUrl||e,timestamp:Date.now()};return localStorage.setItem(this.segmentStateKey,JSON.stringify(i)),new Promise(e=>{this.hideResults(),this.hideError();let i=document.querySelector(".results-header");i&&(i.style.display="none");let o=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 0px;">Woah, that's a lot of text! (${Math.round(t.totalLength/1e3)}k characters)</p>
                        <p style="margin-top: 0; margin-bottom: 8px;">Select a segment to scan:</p>
                        <div class="segments-list">
                            ${this.createSegmentRows(t.segments)}
                        </div>
                    </div>
                </div>
            `;this.quotesContainer.innerHTML=o,this.resultsSection.style.display="block";let a=document.querySelector(".container");a.classList.add("segment-expanded"),setTimeout(()=>{let t=this.quotesContainer.querySelectorAll(".segment-option");t.forEach(t=>{t.addEventListener("click",()=>{let i=parseInt(t.dataset.index);localStorage.removeItem(this.segmentStateKey);let o=document.querySelector(".container");o.classList.remove("expanded","medium-expanded","segment-expanded"),this.hideResults(),e(i)})})},100)})}createSegmentRows(t){let e=[];for(let i=0;i<t.length;i+=5){let o=t.slice(i,i+5),a=`
                <div class="segment-row">
                    ${o.map(t=>`
                        <button class="segment-option" data-index="${t.index}" title="Characters ${t.start.toLocaleString()} - ${t.end.toLocaleString()}">
                            ${t.index+1}
                        </button>
                    `).join("")}
                </div>
            `;e.push(a)}return e.join("")}async showSegmentSelector(t,e=null){let i={fullText:t,topic:e||this.topicInput.value,pageTitle:this.lastPageTitle,pageUrl:this.lastPageUrl,timestamp:Date.now()};return localStorage.setItem(this.segmentStateKey,JSON.stringify(i)),new Promise(e=>{let i=[];for(let o=0;o<t.length;o+=5e4){let a=t.substring(o,Math.min(o+5e4,t.length)),n=this.escapeHtml(a.substring(0,150).trim())+"...";i.push({index:i.length,start:o,end:Math.min(o+5e4,t.length),preview:n})}this.hideResults(),this.hideError();let s=document.querySelector(".results-header");s&&(s.style.display="none");let r=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 0px;">Woah, that's a lot of text! (${Math.round(t.length/1e3)}k characters)</p>
                        <p style="margin-top: 0; margin-bottom: 8px;">Select a segment to scan:</p>
                        <div class="segments-list">
                            ${this.createSegmentRows(i)}
                        </div>
                    </div>
                </div>
            `;this.quotesContainer.innerHTML=r,this.resultsSection.style.display="block";let l=document.querySelector(".container");l.classList.add("segment-expanded"),setTimeout(()=>{let i=this.quotesContainer.querySelectorAll(".segment-option");i.forEach(i=>{i.addEventListener("click",()=>{let o=parseInt(i.dataset.index),a=5e4*o,n=Math.min(a+5e4,t.length),s=t.substring(a,n);localStorage.removeItem(this.segmentStateKey);let r=document.querySelector(".container");r.classList.remove("expanded","medium-expanded","segment-expanded"),this.hideResults(),e(s)})})},100)})}escapeHtml(t){let e=document.createElement("div");return e.textContent=t,e.innerHTML}showPdfDropzone(t){return new Promise(t=>{this.hideError();let e=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 7px; margin-top: -10px; text-align: center;">Hey, it looks like this is a pdf. Let's upload it!</p>
                        <div class="pdf-file-drop-area" id="pdf-drop-area">
                            <span class="drop-area-text">
                                <img src="../media/Clip.png" alt="📎" style="width: auto; height: 20px; margin-right: 3px; vertical-align: middle; object-fit: contain;">
                                Drop PDF here or click to browse
                            </span>
                        </div>
                        <input type="file" id="pdf-file-input" accept=".pdf" style="display: none;">
                    </div>
                </div>
            `,i=document.querySelector(".main-content");i.insertAdjacentHTML("beforeend",e),this.resultsSection.style.display="none";let o=document.querySelector(".container");o.classList.add("pdf-upload-expanded"),this.isPdfUploadMode=!0,this.savePdfUploadState();let a=i.querySelector("#pdf-drop-area"),n=i.querySelector("#pdf-file-input"),s=0;a.addEventListener("click",()=>{n.click()}),a.addEventListener("dragenter",t=>{t.preventDefault(),t.stopPropagation(),s++,a.classList.add("drag-over")}),a.addEventListener("dragover",t=>{t.preventDefault(),t.stopPropagation()}),a.addEventListener("dragleave",t=>{t.preventDefault(),t.stopPropagation(),0==--s&&a.classList.remove("drag-over")}),a.addEventListener("drop",e=>{e.preventDefault(),e.stopPropagation(),s=0,a.classList.remove("drag-over");let n=e.dataTransfer.files;if(n.length>0){let r=n[0];if("application/pdf"===r.type||r.name.endsWith(".pdf")){let l=i.querySelector(".segment-container");l&&l.remove(),o.classList.remove("segment-expanded","pdf-upload-expanded"),this.hideResults(),this.isPdfUploadMode=!1,this.clearPdfUploadState(),t(r)}else this.showError("Please drop a PDF file.")}}),n.addEventListener("change",e=>{let a=e.target.files;if(a.length>0){let n=a[0];if("application/pdf"===n.type||n.name.endsWith(".pdf")){let s=i.querySelector(".segment-container");s&&s.remove(),o.classList.remove("segment-expanded","pdf-upload-expanded"),this.hideResults(),this.isPdfUploadMode=!1,this.clearPdfUploadState(),t(n)}else this.showError("Please select a PDF file.")}})})}savePdfUploadState(){chrome.storage.local.set({quotely_pdf_upload_mode:!0})}clearPdfUploadState(){chrome.storage.local.remove(["quotely_pdf_upload_mode"])}async saveUploadedPdfInfo(t,e,i){try{await chrome.storage.local.set({[`quotely_uploaded_pdf_${t}`]:{fileContent:e,title:i,timestamp:Date.now()}})}catch(o){console.error("Failed to cache PDF:",o)}}async getUploadedPdfInfo(t){try{let e=await chrome.storage.local.get([`quotely_uploaded_pdf_${t}`]),i=e[`quotely_uploaded_pdf_${t}`];if(i){let o=Date.now()-i.timestamp;if(o<864e5)return i;await chrome.storage.local.remove([`quotely_uploaded_pdf_${t}`])}return null}catch(a){return console.error("Failed to get cached PDF:",a),null}}clearPdfDropzone(){let t=document.querySelector(".main-content"),e=t.querySelector(".segment-container");e&&e.remove();let i=document.querySelector(".container");i.classList.remove("segment-expanded","pdf-upload-expanded")}checkPdfUploadMode(){chrome.storage.local.get(["quotely_pdf_upload_mode"],t=>{t.quotely_pdf_upload_mode&&(this.hideResults(),this.isPdfUploadMode=!0,this.showPdfDropzone("Local PDF"))})}createTooltipElement(){this.tooltipElement=document.createElement("div"),this.tooltipElement.className="free-floating-tooltip",this.tooltipElement.style.cssText=`
            position: fixed;
            background: #111827;
            color: #ffffff;
            padding: 10px 14px;
            border: 1px solid #374151;
            font-size: 13px;
            line-height: 1.4;
            max-width: 250px;
            min-width: 240px;
            white-space: normal;
            box-shadow: 0 4px 12px rgba(0,0,0,0.25);
            border-radius: 6px;
            z-index: 1000;
            pointer-events: none;
            opacity: 0;
            transition: opacity 0.12s ease;
            display: none;
        `,document.body.appendChild(this.tooltipElement)}showTooltip(t,e,i){let o=document.createElement("div");o.style.cssText=`
            position: absolute;
            visibility: hidden;
            width: 240px;
            max-width: 250px;
            padding: 10px 14px;
            font-size: 13px;
            line-height: 1.4;
            white-space: normal;
            border: 1px solid #374151;
            background: #111827;
            color: #ffffff;
            z-index: -1;
        `,o.textContent=t,document.body.appendChild(o);let a=o.offsetHeight;document.body.removeChild(o),this.tooltipElement.textContent=t,this.tooltipElement.style.left=e+"px",this.tooltipElement.style.top=i-a+31+"px",this.tooltipElement.style.display="block",this.tooltipElement.style.opacity="1"}hideTooltip(){this.tooltipElement.style.opacity="0",setTimeout(()=>{this.tooltipElement.style.display="none"},120)}displayQuotes(t,e,i){this.quotesContainer.innerHTML="";let o=document.querySelector(".results-header");o&&(o.style.display=""),this.appendPinnedQuotesFromOtherSites();let a=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),n=a.map(t=>t.quote),s=t.filter(t=>{let e=t.quote||t;return!n.includes(e)});s.forEach((t,o)=>{let a=this.createQuoteElement(t,o,e,i,t.fromPdf);this.quotesContainer.appendChild(a)}),this.showResults(),this.saveSession(t,e,i),this.restoreAllCitationStates();let r=document.querySelector(".container");r.classList.remove("medium-expanded"),r.classList.add("expanded")}createQuoteElement(t,e,i,o,a=!1){let n=document.createElement("div");n.className="quote-item";let s=t.quote||t,r=t.relevance||"Relevant to topic",l=a?'<button class="action-btn generate-citation-btn pdf-no-citation" disabled>Citation Unavailable</button>':`<button class="action-btn generate-citation-btn" data-index="${e}" data-title="${i.replace(/"/g,"&quot;")}" data-url="${o.replace(/"/g,"&quot;")}">
                Generate Citation
            </button>`,d=0===e?`<div class="quote-help js-tooltip" data-help="${r.replace(/"/g,"&quot;")}">
                <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
            </div>`:`<div class="quote-help" data-help="${r.replace(/"/g,"&quot;")}">
                <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
            </div>`;n.innerHTML=`
            <div class="quote-pin" data-index="${e}" data-from-pdf="${a}">
                <img src="../media/Pin.png" alt="Pin" style="width: 16px; height: 19px;">
            </div>
            <div class="quote-text">"${s}"</div>
            <div class="quote-actions">
                <button class="action-btn copy-btn" data-quote="${s.replace(/"/g,"&quot;")}">
                    Copy Quote
                </button>
                ${l}
                ${d}
            </div>
            <div class="citation-display" id="citation-${e}" style="display: none;"></div>
        `;let c=n.querySelector(".copy-btn"),p=n.querySelector(".generate-citation-btn"),u=n.querySelector(".quote-pin"),h=n.querySelector(".quote-help");return ClickSpark({sparkColor:"#4287f5",sparkSize:15,sparkRadius:65,sparkCount:12,duration:300,children:c}),c.addEventListener("click",()=>{let t=c.getAttribute("data-quote");this.copyQuote(t)}),u.addEventListener("click",()=>{let t=parseInt(u.getAttribute("data-index"));this.togglePin(t,u)}),p&&!p.classList.contains("pdf-no-citation")&&p.addEventListener("click",()=>{let t=parseInt(p.getAttribute("data-index")),e=p.getAttribute("data-title"),i=p.getAttribute("data-url"),o=document.getElementById(`citation-${t}`);o&&""!==o.innerHTML.trim()?this.toggleCitation(t):this.generateCitation(t,e,i)}),h&&h.classList.contains("js-tooltip")&&(h.addEventListener("mouseenter",t=>{let e=h.getBoundingClientRect(),i=h.getAttribute("data-help"),o=e.left-258,a=e.top;this.showTooltip(i,o,a)}),h.addEventListener("mouseleave",()=>{this.hideTooltip()})),n}async generateCitation(t,e,i){let o,a;if("string"==typeof t&&t.startsWith("pinned-")){if(!(o=document.querySelector(`[data-pinned-id="${t}"]`)?.closest(".quote-item"))){console.error("Pinned quote element not found for ID:",t);return}a=o.querySelector(".quote-text").textContent.replace(/"/g,"")}else{if(!(o=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item"))){console.error("Quote element not found for index:",t);return}a=o.querySelector(".quote-text").textContent.replace(/"/g,"")}let n=document.getElementById(`citation-${t}`),s=this.citationFormat.value,r=o.querySelector(".generate-citation-btn"),l=r.textContent;r.innerHTML=`
            <div class="loading-spinner"></div>
            Generating...
        `,r.disabled=!0;try{let d=await fetch(`${this.serverUrl}/api/format-citation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({quote:a,pageTitle:e,pageUrl:i,format:s})});if(d.ok){let c=await d.json();n.innerHTML=`
                    <div class="citation-item">
                        <div class="citation-text">${c.citation}</div>
                        <button class="citation-copy-btn" data-citation="${c.citation.replace(/"/g,"&quot;")}">
                            Copy
                        </button>
                    </div>
                    ${c.inTextCitation?`
                        <div class="citation-divider"></div>
                        <div class="citation-item">
                            <div class="citation-text">${c.inTextCitation.parenthetical||c.inTextCitation.narrative}</div>
                            <button class="citation-copy-btn" data-citation="${(c.inTextCitation.parenthetical||c.inTextCitation.narrative).replace(/"/g,"&quot;")}">
                                Copy
                            </button>
                        </div>
                    `:""}
                `,n.style.display="block";let p=n.querySelectorAll(".citation-copy-btn");p.forEach(t=>{t.addEventListener("click",()=>{let e=t.getAttribute("data-citation");this.copyCitation(e)})}),this.updateQuoteCitationState(a,!0,!0,c),r.innerHTML="Hide Citation",r.disabled=!1}else throw Error(`Server error: ${d.status}`)}catch(u){console.error("Error generating citation:",u),n.innerHTML=`
                <div style="color: #dc2626; text-align: center; padding: 12px; background: #fef2f2; border: 1px solid #fecaca; border-radius: 6px;">
                    Error generating citation. Please try again.
                </div>
            `,n.style.display="block",r.innerHTML=l,r.disabled=!1}}updateAllCitations(){this.restoreCitations();let t=document.querySelectorAll(".citation-display");t.forEach(t=>{if("none"!==t.style.display){let e=t.closest(".quote-item");e.querySelector(".quote-text").textContent.replace(/"/g,"");let i=this.lastPageTitle||"Current Page",o=this.lastPageUrl||"Current URL";this.generateCitation(Array.from(e.parentNode.children).indexOf(e),i,o)}})}copyQuote(t){navigator.clipboard.writeText(t).then(()=>{}).catch(t=>{console.error("Failed to copy quote:",t)})}copyCitation(t){navigator.clipboard.writeText(t).then(()=>{}).catch(t=>{console.error("Failed to copy citation:",t)})}showTemporaryMessage(t){let e=document.createElement("div");e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            font-size: 12px;
            z-index: 1000;
        `,e.textContent=t,document.body.appendChild(e),setTimeout(()=>{e.remove()},2e3)}setLoading(t){this.findQuotesBtn.disabled=t,this.btnText.style.display=t?"none":"block",this.searchIcon.style.display=t?"none":"block",this.loadingSpinner.style.display=t?"block":"none"}showResults(){this.resultsSection.style.display="block"}hideResults(){this.resultsSection.style.display="none"}showError(t){this.errorMessage.textContent=t,this.errorMessage.style.display="block";let e=document.querySelector(".container");e.classList.remove("expanded"),e.classList.add("medium-expanded")}hideError(){this.errorMessage.style.display="none"}saveSession(t,e,i){try{let o=t.map(t=>({...t,fromPdf:void 0!==t.fromPdf&&t.fromPdf})),a={quotes:o,pageTitle:e,pageUrl:i,topic:this.topicInput.value.trim(),timestamp:Date.now()};localStorage.setItem(this.storageKey,JSON.stringify(a))}catch(n){console.error("Failed to save session:",n)}}restoreLastSession(){try{let t=localStorage.getItem("quotely_current_topic");t&&(this.topicInput.value=t);let e=localStorage.getItem(this.storageKey);if(!e)return;let i=JSON.parse(e);if(Date.now()-i.timestamp>864e5)return;if(!t&&i.topic&&(this.topicInput.value=i.topic),i.quotes&&i.quotes.length>0){this.lastPageTitle=i.pageTitle,this.lastPageUrl=i.pageUrl;let o=i.quotes.map(t=>({...t,fromPdf:void 0!==t.fromPdf&&t.fromPdf}));this.displayQuotes(o,i.pageTitle,i.pageUrl)}}catch(a){console.error("Failed to restore session:",a)}}checkPendingSegmentSelection(){try{let t=localStorage.getItem(this.segmentStateKey);if(!t)return;let e=JSON.parse(t);if(Date.now()-e.timestamp>36e5){localStorage.removeItem(this.segmentStateKey);return}e.topic&&(this.topicInput.value=e.topic),e.pageTitle&&(this.lastPageTitle=e.pageTitle),e.pageUrl&&(this.lastPageUrl=e.pageUrl),e.isPdf?this.showPdfSegmentSelector(e.pdfData,e.pdfUrl).then(async t=>{if(null!==t){this.setLoading(!0);try{let i=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:e.pdfUrl,segmentIndex:t})});if(i.ok){let o=await i.json();this.continueWithSelectedSegment(o.content,e.topic)}else this.showError("Failed to retrieve PDF segment. Please try again."),this.setLoading(!1)}catch(a){console.error("Error retrieving PDF segment:",a),this.showError("Failed to retrieve PDF segment. Please try again."),this.setLoading(!1)}}}):this.showSegmentSelector(e.fullText,e.topic).then(t=>{t&&this.continueWithSelectedSegment(t,e.topic)})}catch(i){console.error("Failed to restore segment selection:",i),localStorage.removeItem(this.segmentStateKey)}}async continueWithSelectedSegment(t,e){try{this.setLoading(!0);let i={content:t,title:this.lastPageTitle||"Current Page",url:this.lastPageUrl||window.location.href};this.lastPageTitle=i.title,this.lastPageUrl=i.url;let o=await fetch(`${this.serverUrl}/api/find-quotes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:e,pageContent:t,pageUrl:this.lastPageUrl,pageTitle:this.lastPageTitle,isOCR:!1,fromPdf:this.isPdfPage||!1})});if(!o.ok){if(413===o.status){this.showError("The page is too large to analyze. Try a simpler page or select text and paste it instead.");return}throw Error(`Server error: ${o.status}`)}let a=await o.json();if(a.quotes&&a.quotes.length>0){this.lastPageTitle=a.pageTitle||this.lastPageTitle,this.lastPageUrl=a.pageUrl||this.lastPageUrl;let n=a.quotes.map(t=>({...t,fromPdf:void 0!==a.fromPdf?a.fromPdf:this.isPdfPage||!1}));this.displayQuotes(n,this.lastPageTitle,this.lastPageUrl)}else this.showError("No relevant quotes found. Try a different topic or check if the page has relevant content.")}catch(s){console.error("Error finding quotes:",s),this.showError("Failed to find quotes. The server might be offline. Please try again later.")}finally{this.setLoading(!1)}}saveCitationToStorage(t,e,i,o,a,n=!0){try{let s=JSON.parse(localStorage.getItem(this.citationsKey)||"{}"),r=`${o}_${t}`;s[r]={data:e,pageTitle:i,pageUrl:o,format:a,quoteText:t,isVisible:n,timestamp:Date.now()},localStorage.setItem(this.citationsKey,JSON.stringify(s))}catch(l){console.error("Failed to save citation:",l)}}restoreCitations(){try{let t=JSON.parse(localStorage.getItem(this.citationsKey)||"{}"),e=this.lastPageUrl;if(!e)return;Object.keys(t).forEach(i=>{if(i.startsWith(`${e}_`)){let o=t[i],a=o.quoteText,n=o.format;n===this.citationFormat.value&&this.displayStoredCitationByQuote(a,o)}})}catch(i){console.error("Failed to restore citations:",i)}}displayStoredCitationByQuote(t,e){let i=document.querySelectorAll("#quotes-container .quote-item"),o=null,a=null;for(let n of i){let s=n.querySelector(".quote-text").textContent.replace(/"/g,"");if(s===t){o=n;let r=n.querySelector(".quote-pin");r&&(a=r.getAttribute("data-index"));break}}if(!o||!a)return;let l=document.getElementById(`citation-${a}`);if(!l||""!==l.innerHTML.trim())return;l.innerHTML=`
            <div class="citation-box">
                <div class="citation-item">
                    <div class="citation-text">${e.citationData.citation}</div>
                    <button class="citation-copy-btn" data-citation="${e.citationData.citation.replace(/"/g,"&quot;")}">
                        Copy
                    </button>
                </div>
                ${e.citationData.inTextCitation?`
                    <div class="citation-divider"></div>
                    <div class="citation-item">
                        <div class="citation-text">${e.citationData.inTextCitation.parenthetical||e.citationData.inTextCitation.narrative}</div>
                        <button class="citation-copy-btn" data-citation="${(e.citationData.inTextCitation.parenthetical||e.citationData.inTextCitation.narrative).replace(/"/g,"&quot;")}">
                            Copy
                        </button>
                    </div>
                `:""}
            </div>
        `,l.style.display=e.isVisible?"block":"none";let d=o.querySelector(".generate-citation-btn");d&&(d.innerHTML=e.isVisible?"Hide Citation":"Show Citation");let c=l.querySelectorAll(".citation-copy-btn");c.forEach(t=>{t.addEventListener("click",()=>{let e=t.getAttribute("data-citation");this.copyCitation(e)})})}clearStoredCitations(){try{localStorage.removeItem(this.citationsKey)}catch(t){console.error("Failed to clear stored citations:",t)}}clearStoredPins(){try{localStorage.removeItem("quotely_pinned")}catch(t){console.error("Failed to clear stored pins:",t)}}appendPinnedQuotesFromOtherSites(){try{let t=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");if(this.lastPageUrl,0===t.length)return;t.forEach((t,e)=>{let i=this.createPinnedQuoteElement(t,`pinned-${e}`);this.quotesContainer.appendChild(i)})}catch(e){console.error("Failed to append pinned quotes from other sites:",e)}}createPinnedQuoteElement(t,e){let i=document.createElement("div");i.className="quote-item pinned",i.setAttribute("data-pinned-id",e);let o=t.fromPdf||!1,a=o?'<button class="action-btn generate-citation-btn pdf-no-citation" disabled>Citation Unavailable</button>':`<button class="action-btn generate-citation-btn" data-pinned-id="${e}" data-title="${t.pageTitle.replace(/"/g,"&quot;")}" data-url="${t.url.replace(/"/g,"&quot;")}">
                Generate Citation
            </button>`;i.innerHTML=`
            <div class="quote-pin" data-pinned-id="${e}" data-from-pdf="${o}" style="opacity: 1;">
                <img src="../media/Pin.png" alt="Pin" style="width: 16px; height: 19px;">
            </div>
            <div class="quote-text">"${t.quote}"</div>
            <div class="quote-actions">
                <button class="action-btn copy-btn" data-quote="${t.quote.replace(/"/g,"&quot;")}">
                    Copy Quote
                </button>
                ${a}
                <div class="quote-help" data-help="Pinned from ${t.pageTitle}">
                    <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
                </div>
            </div>
            <div class="citation-display" id="citation-${e}" style="display: none;"></div>
        `;let n=i.querySelector(".copy-btn"),s=i.querySelector(".generate-citation-btn"),r=i.querySelector(".quote-pin");if(ClickSpark({sparkColor:"#fff",sparkSize:10,sparkRadius:15,sparkCount:8,duration:400,children:n}),n.addEventListener("click",()=>{let t=n.getAttribute("data-quote");this.copyQuote(t),n.classList.add("pop-animation"),setTimeout(()=>{n.classList.remove("pop-animation")},300)}),r.addEventListener("click",()=>{this.removePinnedQuote(e,t.quote)}),s&&!s.classList.contains("pdf-no-citation")&&s.addEventListener("click",()=>{let t=s.getAttribute("data-pinned-id"),e=s.getAttribute("data-title"),i=s.getAttribute("data-url"),o=document.getElementById(`citation-${t}`);o&&""!==o.innerHTML.trim()?this.toggleCitation(t):this.generateCitation(t,e,i)}),t.citation){let l=i.querySelector(`#citation-${e}`);if(l){l.innerHTML=t.citation;let d=!1!==t.citationVisible;l.style.display=d?"block":"none",s.innerHTML=d?"Hide Citation":"Generate Citation"}}return i}removePinnedQuote(t,e){try{let i=document.querySelector(`[data-pinned-id="${t}"]`);i&&i.remove();let o=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),a=o.filter(t=>t.quote!==e);localStorage.setItem("quotely_pinned",JSON.stringify(a))}catch(n){console.error("Failed to remove pinned quote:",n)}}checkAndRestorePins(){try{JSON.parse(localStorage.getItem("quotely_pinned")||"[]");let t=document.querySelectorAll("#quotes-container .quote-item");t.length>0&&this.lastPageUrl&&this.restorePinnedState()}catch(e){console.error("Failed to check and restore pins:",e)}}updatePinnedStorage(){try{JSON.parse(localStorage.getItem("quotely_pinned")||"[]");let t=document.querySelectorAll("#quotes-container .quote-item"),e=[];t.forEach(t=>{if(t.classList.contains("pinned")){let i=t.querySelector(".quote-pin");if(i){let o=parseInt(i.getAttribute("data-index")),a="true"===i.getAttribute("data-from-pdf"),n=t.querySelector(".quote-text").textContent.replace(/"/g,""),s=document.getElementById(`citation-${o}`),r=s&&""!==s.innerHTML.trim(),l={index:o,quote:n,url:this.lastPageUrl,pageTitle:this.lastPageTitle,citation:r?s.innerHTML:null,citationVisible:r&&"none"!==s.style.display,fromPdf:a,timestamp:Date.now()};e.push(l)}}}),localStorage.setItem("quotely_pinned",JSON.stringify(e))}catch(i){console.error("Failed to update pinned storage:",i)}}toggleCitation(t){let e=document.getElementById(`citation-${t}`),i,o;if("string"==typeof t&&t.startsWith("pinned-")){i=document.querySelector(`[data-pinned-id="${t}"].generate-citation-btn`);let a=i?.closest(".quote-item");a&&(o=a.querySelector(".quote-text").textContent.replace(/"/g,""))}else{let n=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");n&&(i=n.querySelector(".generate-citation-btn"),o=n.querySelector(".quote-text").textContent.replace(/"/g,""))}"none"===e.style.display||""===e.style.display?(e.style.display="block",i.innerHTML="Hide Citation",this.updateQuoteCitationState(o,!0,!0)):(e.style.display="none",i.innerHTML="Show Citation",this.updateQuoteCitationState(o,!0,!1))}getQuotesList(){try{return JSON.parse(localStorage.getItem(this.quotesKey)||"[]")}catch(t){return console.error("Failed to get quotes list:",t),[]}}saveQuotesList(t){try{localStorage.setItem(this.quotesKey,JSON.stringify(t))}catch(e){console.error("Failed to save quotes list:",e)}}updateQuoteCitationState(t,e,i,o=null){try{let a=this.getQuotesList(),n=this.lastPageUrl;if(!n)return;let s=a.find(e=>e.quoteText===t&&e.pageUrl===n);s||(s={quoteText:t,pageUrl:n,pageTitle:this.lastPageTitle,hasCitation:!1,isVisible:!1,citationData:null,timestamp:Date.now()},a.push(s)),s.hasCitation=e,s.isVisible=i,o&&(s.citationData=o),s.timestamp=Date.now(),this.saveQuotesList(a)}catch(r){console.error("Failed to update quote citation state:",r)}}getQuoteCitationState(t){try{let e=this.getQuotesList(),i=this.lastPageUrl;if(!i)return{hasCitation:!1,isVisible:!1,citationData:null};let o=e.find(e=>e.quoteText===t&&e.pageUrl===i);if(o)return{hasCitation:o.hasCitation||!1,isVisible:o.isVisible||!1,citationData:o.citationData||null};return{hasCitation:!1,isVisible:!1,citationData:null}}catch(a){return console.error("Failed to get quote citation state:",a),{hasCitation:!1,isVisible:!1,citationData:null}}}clearCurrentPageQuotes(){try{let t=this.getQuotesList(),e=this.lastPageUrl;if(!e)return;let i=t.filter(t=>t.pageUrl!==e);this.saveQuotesList(i)}catch(o){console.error("Failed to clear current page quotes:",o)}}restoreAllCitationStates(){try{let t=document.querySelectorAll("#quotes-container .quote-item");t.forEach(t=>{let e=t.querySelector(".quote-text").textContent.replace(/"/g,""),i=this.getQuoteCitationState(e);i.hasCitation&&this.displayStoredCitationByQuote(e,i)})}catch(e){console.error("Failed to restore citation states:",e)}}togglePin(t,e){let i=e.closest(".quote-item"),o=i.classList.contains("pinned");o?(i.classList.remove("pinned"),e.style.opacity="0.5",this.removeFromPinned(t)):(i.classList.add("pinned"),e.style.opacity="1",this.addToPinned(t)),this.reorderQuotes(),this.updatePinnedStorage()}addToPinned(t){try{let e=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),i=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");if(!i)return;let o=i.querySelector(".quote-pin"),a="true"===o.getAttribute("data-from-pdf"),n=i.querySelector(".quote-text").textContent.replace(/"/g,""),s=document.getElementById(`citation-${t}`),r=s&&""!==s.innerHTML.trim(),l={index:t,quote:n,url:this.lastPageUrl,pageTitle:this.lastPageTitle,citation:r?s.innerHTML:null,citationVisible:r&&"none"!==s.style.display,fromPdf:a,timestamp:Date.now()},d=e.find(t=>t.quote===n);d||(e.push(l),localStorage.setItem("quotely_pinned",JSON.stringify(e)))}catch(c){console.error("Failed to pin quote:",c)}}removeFromPinned(t){try{let e=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),i=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");if(!i)return;let o=i.querySelector(".quote-text").textContent.replace(/"/g,""),a=e.filter(t=>t.quote!==o);localStorage.setItem("quotely_pinned",JSON.stringify(a))}catch(n){console.error("Failed to unpin quote:",n)}}reorderQuotes(){let t=document.getElementById("quotes-container"),e=Array.from(t.children),i=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");e.sort((t,e)=>{let o=parseInt(t.querySelector(".quote-pin").getAttribute("data-index")),a=parseInt(e.querySelector(".quote-pin").getAttribute("data-index")),n=t.querySelector(".quote-text").textContent.replace(/"/g,""),s=e.querySelector(".quote-text").textContent.replace(/"/g,""),r=i.some(t=>t.quote===n),l=i.some(t=>t.quote===s);return r&&!l?-1:!r&&l?1:o-a}),e.forEach(e=>t.appendChild(e)),setTimeout(()=>{this.restoreCitations()},100)}restorePinnedState(){try{let t=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");if(0===t.length)return;let e=document.querySelectorAll("#quotes-container .quote-item:not([data-pinned-id])");if(0===e.length)return;let i=0;e.forEach((e,o)=>{let a=e.querySelector(".quote-pin");if(a){let n=parseInt(a.getAttribute("data-index")),s=e.querySelector(".quote-text").textContent.replace(/"/g,""),r=t.find(t=>t.quote===s);if(r){e.classList.add("pinned"),a.style.opacity="1",i++;let l=document.getElementById(`citation-${n}`);if(r.citation&&l){l.innerHTML=r.citation;let d=!1!==r.citationVisible;l.style.display=d?"block":"none";let c=e.querySelector(".generate-citation-btn");c&&(c.innerHTML=d?"Hide Citation":"Generate Citation")}}}}),this.reorderQuotes(),this.restoreCitations()}catch(o){console.error("Failed to restore pinned state:",o)}}}document.addEventListener("DOMContentLoaded",()=>{window.quotelyPopup=new QuotelyPopup});