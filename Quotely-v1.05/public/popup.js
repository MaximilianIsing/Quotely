class QuotelyPopup{constructor(){this.serverUrl="https://quotely-rmgh.onrender.com",this.lastPageTitle=null,this.lastPageUrl=null,this.isPdfPage=!1,this.isPdfUploadMode=!1,this.storageKey="quotely_last_session",this.citationsKey="quotely_citations",this.quotesKey="quotely_quotes",this.segmentStateKey="quotely_segment_state",this.tooltipElement=null,this.initializeElements(),this.attachEventListeners(),this.restoreLastSession(),this.checkPendingSegmentSelection(),this.checkPdfUploadMode(),this.restoreSettingsState(),this.restoreTheme(),this.restoreSpecificity()}initializeElements(){this.topicInput=document.getElementById("topic-input"),this.findQuotesBtn=document.getElementById("find-quotes-btn"),this.resultsSection=document.getElementById("results-section"),this.quotesContainer=document.getElementById("quotes-container"),this.errorMessage=document.getElementById("error-message"),this.citationFormat=document.getElementById("citation-format"),this.btnText=this.findQuotesBtn.querySelector(".btn-text"),this.searchIcon=this.findQuotesBtn.querySelector(".search-icon"),this.loadingSpinner=this.findQuotesBtn.querySelector(".loading-spinner"),this.createTooltipElement()}attachEventListeners(){this.findQuotesBtn.addEventListener("click",()=>this.findQuotes()),this.topicInput.addEventListener("keypress",t=>{"Enter"===t.key&&t.ctrlKey&&this.findQuotes()}),this.topicInput.addEventListener("input",()=>{this.saveCurrentInput()}),this.citationFormat.addEventListener("change",()=>this.updateAllCitations());let t=document.getElementById("settings-btn");document.getElementById("settings-popup"),t&&t.addEventListener("click",()=>this.toggleSettings());let e=document.getElementById("theme-toggle");e&&e.addEventListener("change",()=>this.toggleTheme());let i=document.querySelector(".theme-toggle");i&&e&&i.addEventListener("click",t=>{(t.target.classList.contains("theme-toggle-slider")||t.target.closest(".theme-toggle-slider")||t.target.classList.contains("theme-toggle-thumb")||t.target.closest(".theme-toggle-thumb"))&&(t.preventDefault(),t.stopPropagation(),e.checked=!e.checked,e.dispatchEvent(new Event("change")))});let o=document.querySelectorAll(".segmented-btn");o.forEach(t=>{t.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),o.forEach(t=>t.classList.remove("active")),t.classList.add("active");let i=t.dataset.value;localStorage.setItem("quotely_specificity",i)})}),document.addEventListener("click",t=>{let e=document.getElementById("settings-btn"),i=document.getElementById("settings-popup");i&&i.classList.contains("show")&&!e.contains(t.target)&&!i.contains(t.target)&&this.hideSettings()})}autoResizeTextarea(){this.topicInput.style.height="auto";let t=Math.min(this.topicInput.scrollHeight+4,120);this.topicInput.style.height=t+"px"}saveCurrentInput(){let t=this.topicInput.value;t.trim()&&localStorage.setItem("quotely_current_topic",t)}async findQuotes(){let t=this.topicInput.value.trim();if(!t){this.showError("Please enter a topic to search for quotes.");return}localStorage.removeItem(this.segmentStateKey),this.clearPdfDropzone(),this.clearCurrentPageQuotes();let e=document.querySelector(".container");e.classList.remove("expanded","medium-expanded","segment-expanded"),this.setLoading(!0),this.hideError(),this.hideResults();try{let[i]=await chrome.tabs.query({active:!0,currentWindow:!0}),o=i.url&&(i.url.includes(".pdf")||i.url.startsWith("file://")&&i.url.endsWith(".pdf")),n=i.url&&i.url.includes("viewer");this.isPdfPage=o||n;let a;if(n){this.setLoading(!1);let s=await this.showPdfDropzone(i.title||"Document Viewer");if(!s)return;this.setLoading(!0);let r=await s.arrayBuffer(),l=btoa(new Uint8Array(r).reduce((t,e)=>t+String.fromCharCode(e),"")),d=i.title||"Document Viewer",c=await fetch(`${this.serverUrl}/api/extract-pdf`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fileContent:l,title:d,isLocalFile:!0})});if(c.ok){if((a=await c.json()).requiresSegmentation){this.setLoading(!1);let p=await this.showPdfSegmentSelector(a,a.url);if(null===p)return;let u=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:a.url,segmentIndex:p})});if(!u.ok)throw Error(`Segment retrieval failed: ${u.status}`);let h=await u.json();a={content:h.content,title:a.title,url:a.url},this.setLoading(!0)}}else throw Error(`PDF extraction failed: ${c.status}`)}else if(o){try{let g;if(i.url.startsWith("file://")){let m=await this.getUploadedPdfInfo(i.url),y,f;if(m)y=m.fileContent,f=m.title;else{this.setLoading(!1);let q=await this.showPdfDropzone(i.title);if(!q)return;this.setLoading(!0);let v=await q.arrayBuffer();await this.saveUploadedPdfInfo(i.url,y=btoa(new Uint8Array(v).reduce((t,e)=>t+String.fromCharCode(e),"")),f=i.title||"Local PDF")}g={fileContent:y,title:f,isLocalFile:!0}}else g={url:i.url,title:i.title};let S=await fetch(`${this.serverUrl}/api/extract-pdf`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(g)});if(S.ok){if((a=await S.json()).requiresSegmentation){this.setLoading(!1);let b=await this.showPdfSegmentSelector(a,a.url);if(null===b)return;let x=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:a.url,segmentIndex:b})});if(!x.ok)throw Error(`Segment retrieval failed: ${x.status}`);let P=await x.json();a={content:P.content,title:a.title,url:a.url},this.setLoading(!0)}}else throw Error(`PDF extraction failed: ${S.status}`)}catch($){console.error("PDF extraction error:",$),"scanned_pdf_too_large"===a.error&&a.message?this.showError(a.message):this.showError("This PDF page is protected. Download this pdf locally then try again.");return}if(a&&"scanned_pdf_too_large"===a.error){this.setLoading(!1),this.showError("This PDF requires scanning but exceeds the 30-page limit for OCR processing.");return}}else{this.isPdfUploadMode&&(this.isPdfUploadMode=!1,this.clearPdfUploadState(),this.clearPdfDropzone());let C=await chrome.scripting.executeScript({target:{tabId:i.id},func(){let t=function t(){let e=document.documentElement.outerHTML,i=new DOMParser,o=i.parseFromString(e,"text/html");["script","style","noscript","iframe","embed","object","nav","header","footer","aside","menu","sidebar",".nav",".navbar",".menu",".sidebar",".footer",".header",".navigation",".breadcrumb",".pagination",".ads",".advertisement",".social",".share",".comments",".related",".recommended",".cookie-banner",".popup",".modal",".overlay"].forEach(t=>{let e=o.querySelectorAll(t);e.forEach(t=>t.remove())});let n=null;for(let a of["main","article",'[role="main"]',".content","#content",".main-content",".article-content",".post-content",".entry-content",".document-content",".page-content",".text-content",".blog-content",".post-body",".single-post",".post",".entry",".story"]){let s=o.querySelector(a);if(s&&s.textContent.trim().length>500){n=s;break}}if(!n){let r=o.body;if(r){let l=r.querySelectorAll("div, section, p"),d=null,c=0;l.forEach(t=>{let e=t.textContent.trim(),i=e.length;if(i<200||i>1e5)return;let o=t.querySelectorAll("a").length,n=t.querySelectorAll("p").length,a=t.querySelectorAll("img").length,s=3*n-o-2*a+i/100;s>c&&(c=s,d=t)}),d&&(n=d)}}n||(n=o.body||o.documentElement);let p=n?n.textContent:"";return p=p.replace(/\s+/g," ").replace(/^\s+|\s+$/g,"").replace(/[^\w\s.,!?;:'"()-]/g,"").trim()}();return{content:t,url:window.location.href,title:document.title}}}).catch(()=>[]);if(!C||0===C.length||!C[0]||!C[0].result||!C[0].result.content){this.showError("Cannot access this page content. Try another tab.");return}a=C[0].result}if(this.lastPageTitle=a.title||"Current Page",this.lastPageUrl=a.url||"Unknown URL",this.isProtectedSite(a)){this.setLoading(!1),this.showError("This site is protected. Download the content locally or try a different page.");return}if(a.content&&a.content.length>5e4){this.setLoading(!1);let L=await this.showSegmentSelector(a.content);if(null===L)return;a.content=L,this.setLoading(!0)}let w=(a.content||"").slice(0,5e4),T=localStorage.getItem("quotely_specificity")||"balanced",E=await fetch(`${this.serverUrl}/api/find-quotes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:t,pageContent:w,pageUrl:this.lastPageUrl,pageTitle:this.lastPageTitle,isOCR:a.isOCR||!1,fromPdf:this.isPdfPage||!1,specificity:T})});if(!E.ok){if(413===E.status){this.showError("The page is too large to analyze. Try a simpler page or select text and paste it instead.");return}throw Error(`Server error: ${E.status}`)}let _=await E.json();if(_.quotes&&_.quotes.length>0){this.lastPageTitle=_.pageTitle||this.lastPageTitle,this.lastPageUrl=_.pageUrl||this.lastPageUrl;let I=_.quotes.map(t=>({...t,fromPdf:void 0!==_.fromPdf?_.fromPdf:this.isPdfPage||!1}));this.displayQuotes(I,this.lastPageTitle,this.lastPageUrl)}else this.showError("No relevant quotes found. Try a different topic or check if the page has relevant content.")}catch(k){console.error("Error finding quotes:",k),this.showError("Failed to find quotes. The server might be offline. Please try again later.")}finally{this.setLoading(!1)}}async showPdfSegmentSelector(t,e=null){let i={isPdf:!0,pdfData:t,pdfUrl:e,topic:this.topicInput.value,pageTitle:this.lastPageTitle||t.title,pageUrl:this.lastPageUrl||e,timestamp:Date.now()};return localStorage.setItem(this.segmentStateKey,JSON.stringify(i)),new Promise(e=>{this.hideResults(),this.hideError();let i=document.querySelector(".results-header");i&&(i.style.display="none");let o=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 0px;">Woah, that's a lot of text! (${Math.round(t.totalLength/1e3)}k characters)</p>
                        <p style="margin-top: 0; margin-bottom: 8px;">Select a segment to scan:</p>
                        <div class="segments-list">
                            ${this.createSegmentRows(t.segments)}
                        </div>
                    </div>
                </div>
            `;this.quotesContainer.innerHTML=o,this.resultsSection.style.display="block";let n=document.querySelector(".container");n.classList.add("segment-expanded"),setTimeout(()=>{let t=this.quotesContainer.querySelectorAll(".segment-option");t.forEach(t=>{t.addEventListener("click",()=>{let i=parseInt(t.dataset.index);localStorage.removeItem(this.segmentStateKey);let o=document.querySelector(".container");o.classList.remove("expanded","medium-expanded","segment-expanded"),this.hideResults(),e(i)})})},100)})}createSegmentRows(t){let e=[];for(let i=0;i<t.length;i+=5){let o=t.slice(i,i+5),n=`
                <div class="segment-row">
                    ${o.map(t=>`
                        <button class="segment-option" data-index="${t.index}" title="Characters ${t.start.toLocaleString()} - ${t.end.toLocaleString()}">
                            ${t.index+1}
                        </button>
                    `).join("")}
                </div>
            `;e.push(n)}return e.join("")}async showSegmentSelector(t,e=null){let i={fullText:t,topic:e||this.topicInput.value,pageTitle:this.lastPageTitle,pageUrl:this.lastPageUrl,timestamp:Date.now()};return localStorage.setItem(this.segmentStateKey,JSON.stringify(i)),new Promise(e=>{let i=[];for(let o=0;o<t.length;o+=5e4){let n=t.substring(o,Math.min(o+5e4,t.length)),a=this.escapeHtml(n.substring(0,150).trim())+"...";i.push({index:i.length,start:o,end:Math.min(o+5e4,t.length),preview:a})}this.hideResults(),this.hideError();let s=document.querySelector(".results-header");s&&(s.style.display="none");let r=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 0px;">Woah, that's a lot of text! (${Math.round(t.length/1e3)}k characters)</p>
                        <p style="margin-top: 0; margin-bottom: 8px;">Select a segment to scan:</p>
                        <div class="segments-list">
                            ${this.createSegmentRows(i)}
                        </div>
                    </div>
                </div>
            `;this.quotesContainer.innerHTML=r,this.resultsSection.style.display="block";let l=document.querySelector(".container");l.classList.add("segment-expanded"),setTimeout(()=>{let i=this.quotesContainer.querySelectorAll(".segment-option");i.forEach(i=>{i.addEventListener("click",()=>{let o=parseInt(i.dataset.index),n=5e4*o,a=Math.min(n+5e4,t.length),s=t.substring(n,a);localStorage.removeItem(this.segmentStateKey);let r=document.querySelector(".container");r.classList.remove("expanded","medium-expanded","segment-expanded"),this.hideResults(),e(s)})})},100)})}escapeHtml(t){let e=document.createElement("div");return e.textContent=t,e.innerHTML}showPdfDropzone(t){return new Promise(t=>{this.hideError();let e=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 7px; margin-top: -10px; text-align: center;">Hey, it looks like this is a pdf. Let's upload it!</p>
                        <div class="pdf-file-drop-area" id="pdf-drop-area">
                            <span class="drop-area-text">
                                <img src="../media/Clip.png" alt="📎" style="width: auto; height: 20px; margin-right: 3px; vertical-align: middle; object-fit: contain;">
                                Drop PDF here or click to browse
                            </span>
                        </div>
                        <input type="file" id="pdf-file-input" accept=".pdf" style="display: none;">
                    </div>
                </div>
            `,i=document.querySelector(".main-content");i.insertAdjacentHTML("beforeend",e),this.resultsSection.style.display="none";let o=document.querySelector(".container");o.classList.add("pdf-upload-expanded"),this.isPdfUploadMode=!0,this.savePdfUploadState();let n=i.querySelector("#pdf-drop-area"),a=i.querySelector("#pdf-file-input"),s=0;n.addEventListener("click",()=>{a.click()}),n.addEventListener("dragenter",t=>{t.preventDefault(),t.stopPropagation(),s++,n.classList.add("drag-over")}),n.addEventListener("dragover",t=>{t.preventDefault(),t.stopPropagation()}),n.addEventListener("dragleave",t=>{t.preventDefault(),t.stopPropagation(),0==--s&&n.classList.remove("drag-over")}),n.addEventListener("drop",e=>{e.preventDefault(),e.stopPropagation(),s=0,n.classList.remove("drag-over");let a=e.dataTransfer.files;if(a.length>0){let r=a[0];if("application/pdf"===r.type||r.name.endsWith(".pdf")){let l=i.querySelector(".segment-container");l&&l.remove(),o.classList.remove("segment-expanded","pdf-upload-expanded"),this.hideResults(),this.isPdfUploadMode=!1,this.clearPdfUploadState(),t(r)}else this.showError("Please drop a PDF file.")}}),a.addEventListener("change",e=>{let n=e.target.files;if(n.length>0){let a=n[0];if("application/pdf"===a.type||a.name.endsWith(".pdf")){let s=i.querySelector(".segment-container");s&&s.remove(),o.classList.remove("segment-expanded","pdf-upload-expanded"),this.hideResults(),this.isPdfUploadMode=!1,this.clearPdfUploadState(),t(a)}else this.showError("Please select a PDF file.")}})})}savePdfUploadState(){chrome.storage.local.set({quotely_pdf_upload_mode:!0})}clearPdfUploadState(){chrome.storage.local.remove(["quotely_pdf_upload_mode"])}async saveUploadedPdfInfo(t,e,i){try{await chrome.storage.local.set({[`quotely_uploaded_pdf_${t}`]:{fileContent:e,title:i,timestamp:Date.now()}})}catch(o){console.error("Failed to cache PDF:",o)}}async getUploadedPdfInfo(t){try{let e=await chrome.storage.local.get([`quotely_uploaded_pdf_${t}`]),i=e[`quotely_uploaded_pdf_${t}`];if(i){let o=Date.now()-i.timestamp;if(o<864e5)return i;await chrome.storage.local.remove([`quotely_uploaded_pdf_${t}`])}return null}catch(n){return console.error("Failed to get cached PDF:",n),null}}clearPdfDropzone(){let t=document.querySelector(".main-content"),e=t.querySelector(".segment-container");e&&e.remove();let i=document.querySelector(".container");i.classList.remove("segment-expanded","pdf-upload-expanded")}checkPdfUploadMode(){chrome.storage.local.get(["quotely_pdf_upload_mode"],t=>{t.quotely_pdf_upload_mode&&(this.hideResults(),this.isPdfUploadMode=!0,this.showPdfDropzone("Local PDF"))})}createTooltipElement(){this.tooltipElement=document.createElement("div"),this.tooltipElement.className="free-floating-tooltip",this.tooltipElement.style.cssText=`
            position: fixed;
            background: #111827;
            color: #ffffff;
            padding: 10px 14px;
            border: 1px solid #374151;
            font-size: 13px;
            line-height: 1.4;
            max-width: 250px;
            min-width: 240px;
            white-space: normal;
            box-shadow: 0 4px 12px rgba(0,0,0,0.25);
            border-radius: 6px;
            z-index: 1000;
            pointer-events: none;
            opacity: 0;
            transition: opacity 0.12s ease;
            display: none;
        `,document.body.appendChild(this.tooltipElement)}showTooltip(t,e,i){let o=document.createElement("div");o.style.cssText=`
            position: absolute;
            visibility: hidden;
            width: 240px;
            max-width: 250px;
            padding: 10px 14px;
            font-size: 13px;
            line-height: 1.4;
            white-space: normal;
            border: 1px solid #374151;
            background: #111827;
            color: #ffffff;
            z-index: -1;
        `,o.textContent=t,document.body.appendChild(o);let n=o.offsetHeight;document.body.removeChild(o),this.tooltipElement.textContent=t,this.tooltipElement.style.left=e+"px",this.tooltipElement.style.top=i-n+31+"px",this.tooltipElement.style.display="block",this.tooltipElement.style.opacity="1"}hideTooltip(){this.tooltipElement.style.opacity="0",setTimeout(()=>{this.tooltipElement.style.display="none"},120)}displayQuotes(t,e,i){this.quotesContainer.innerHTML="";let o=document.getElementById("quote-count");o&&(o.textContent=`(${t.length})`);let n=document.querySelector(".results-header");n&&(n.style.display=""),this.appendPinnedQuotesFromOtherSites();let a=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),s=a.map(t=>t.quote),r=t.filter(t=>{let e=t.quote||t;return!s.includes(e)});r.forEach((t,o)=>{let n=this.createQuoteElement(t,o,e,i,t.fromPdf);this.quotesContainer.appendChild(n)}),this.showResults(),this.saveSession(t,e,i),this.restoreAllCitationStates();let l=document.querySelector(".container");l.classList.remove("medium-expanded"),l.classList.add("expanded")}createQuoteElement(t,e,i,o,n=!1){let a=document.createElement("div");a.className="quote-item";let s=t.quote||t,r=t.relevance||"Relevant to topic",l=n?'<button class="action-btn generate-citation-btn pdf-no-citation" disabled>Citation Unavailable</button>':`<button class="action-btn generate-citation-btn" data-index="${e}" data-title="${i.replace(/"/g,"&quot;")}" data-url="${o.replace(/"/g,"&quot;")}">
                Generate Citation
            </button>`,d=0===e?`<div class="quote-help js-tooltip" data-help="${r.replace(/"/g,"&quot;")}">
                <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
            </div>`:`<div class="quote-help" data-help="${r.replace(/"/g,"&quot;")}">
                <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
            </div>`;a.innerHTML=`
            <div class="quote-pin" data-index="${e}" data-from-pdf="${n}">
                <img src="../media/Pin.png" alt="Pin" style="width: 16px; height: 19px;">
            </div>
            <div class="quote-text">"${s}"</div>
            <div class="quote-actions">
                <button class="action-btn copy-btn" data-quote="${s.replace(/"/g,"&quot;")}">
                    Copy Quote
                </button>
                ${l}
                ${d}
            </div>
            <div class="citation-display" id="citation-${e}" style="display: none;"></div>
        `;let c=a.querySelector(".copy-btn"),p=a.querySelector(".generate-citation-btn"),u=a.querySelector(".quote-pin"),h=a.querySelector(".quote-help");return ClickSpark({sparkColor:"#4287f5",sparkSize:15,sparkRadius:65,sparkCount:12,duration:300,children:c}),c.addEventListener("click",()=>{let t=c.getAttribute("data-quote");this.copyQuote(t)}),u.addEventListener("click",()=>{let t=parseInt(u.getAttribute("data-index"));this.togglePin(t,u)}),p&&!p.classList.contains("pdf-no-citation")&&p.addEventListener("click",()=>{let t=parseInt(p.getAttribute("data-index")),e=p.getAttribute("data-title"),i=p.getAttribute("data-url"),o=document.getElementById(`citation-${t}`);o&&""!==o.innerHTML.trim()?this.toggleCitation(t):this.generateCitation(t,e,i)}),h&&h.classList.contains("js-tooltip")&&(h.addEventListener("mouseenter",t=>{let e=h.getBoundingClientRect(),i=h.getAttribute("data-help"),o=e.left-258,n=e.top;this.showTooltip(i,o,n)}),h.addEventListener("mouseleave",()=>{this.hideTooltip()})),a}async generateCitation(t,e,i){let o,n;if("string"==typeof t&&t.startsWith("pinned-")){if(!(o=document.querySelector(`[data-pinned-id="${t}"]`)?.closest(".quote-item"))){console.error("Pinned quote element not found for ID:",t);return}n=o.querySelector(".quote-text").textContent.replace(/"/g,"")}else{if(!(o=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item"))){console.error("Quote element not found for index:",t);return}n=o.querySelector(".quote-text").textContent.replace(/"/g,"")}let a=document.getElementById(`citation-${t}`),s=this.citationFormat.value,r=o.querySelector(".generate-citation-btn"),l=r.textContent;r.innerHTML=`
            <div class="loading-spinner"></div>
            Generating...
        `,r.disabled=!0;try{let d=await fetch(`${this.serverUrl}/api/format-citation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({quote:n,pageTitle:e,pageUrl:i,format:s})});if(d.ok){let c=await d.json();a.innerHTML=`
                    <div class="citation-item">
                        <div class="citation-text">${c.citation}</div>
                        <button class="citation-copy-btn" data-citation="${c.citation.replace(/"/g,"&quot;")}">
                            Copy
                        </button>
                    </div>
                    ${c.inTextCitation?`
                        <div class="citation-divider"></div>
                        <div class="citation-item">
                            <div class="citation-text">${c.inTextCitation.parenthetical||c.inTextCitation.narrative}</div>
                            <button class="citation-copy-btn" data-citation="${(c.inTextCitation.parenthetical||c.inTextCitation.narrative).replace(/"/g,"&quot;")}">
                                Copy
                            </button>
                        </div>
                    `:""}
                `,a.style.display="block";let p=a.querySelectorAll(".citation-copy-btn");p.forEach(t=>{t.addEventListener("click",()=>{let e=t.getAttribute("data-citation");this.copyCitation(e)})}),this.updateQuoteCitationState(n,!0,!0,c),r.innerHTML="Hide Citation",r.disabled=!1}else throw Error(`Server error: ${d.status}`)}catch(u){console.error("Error generating citation:",u),a.innerHTML=`
                <div style="color: #dc2626; text-align: center; padding: 12px; background: #fef2f2; border: 1px solid #fecaca; border-radius: 6px;">
                    Error generating citation. Please try again.
                </div>
            `,a.style.display="block",r.innerHTML=l,r.disabled=!1}}updateAllCitations(){this.restoreCitations();let t=document.querySelectorAll(".citation-display");t.forEach(t=>{if("none"!==t.style.display){let e=t.closest(".quote-item");e.querySelector(".quote-text").textContent.replace(/"/g,"");let i=this.lastPageTitle||"Current Page",o=this.lastPageUrl||"Current URL";this.generateCitation(Array.from(e.parentNode.children).indexOf(e),i,o)}})}copyQuote(t){navigator.clipboard.writeText(t).then(()=>{}).catch(t=>{console.error("Failed to copy quote:",t)})}copyCitation(t){navigator.clipboard.writeText(t).then(()=>{}).catch(t=>{console.error("Failed to copy citation:",t)})}showTemporaryMessage(t){let e=document.createElement("div");e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            font-size: 12px;
            z-index: 1000;
        `,e.textContent=t,document.body.appendChild(e),setTimeout(()=>{e.remove()},2e3)}setLoading(t){this.findQuotesBtn.disabled=t,this.btnText.style.display=t?"none":"block",this.searchIcon.style.display=t?"none":"block",this.loadingSpinner.style.display=t?"block":"none"}showResults(){this.resultsSection.style.display="block"}hideResults(){this.resultsSection.style.display="none"}showError(t){this.errorMessage.textContent=t,this.errorMessage.style.display="block";let e=document.querySelector(".container");e.classList.remove("expanded"),e.classList.add("medium-expanded")}hideError(){this.errorMessage.style.display="none"}saveSession(t,e,i){try{let o=t.map(t=>({...t,fromPdf:void 0!==t.fromPdf&&t.fromPdf})),n={quotes:o,pageTitle:e,pageUrl:i,topic:this.topicInput.value.trim(),timestamp:Date.now()};localStorage.setItem(this.storageKey,JSON.stringify(n))}catch(a){console.error("Failed to save session:",a)}}restoreLastSession(){try{let t=localStorage.getItem("quotely_current_topic");t&&(this.topicInput.value=t);let e=localStorage.getItem(this.storageKey);if(!e)return;let i=JSON.parse(e);if(Date.now()-i.timestamp>864e5)return;if(!t&&i.topic&&(this.topicInput.value=i.topic),i.quotes&&i.quotes.length>0){this.lastPageTitle=i.pageTitle,this.lastPageUrl=i.pageUrl;let o=i.quotes.map(t=>({...t,fromPdf:void 0!==t.fromPdf&&t.fromPdf}));this.displayQuotes(o,i.pageTitle,i.pageUrl)}}catch(n){console.error("Failed to restore session:",n)}}checkPendingSegmentSelection(){try{let t=localStorage.getItem(this.segmentStateKey);if(!t)return;let e=JSON.parse(t);if(Date.now()-e.timestamp>36e5){localStorage.removeItem(this.segmentStateKey);return}e.topic&&(this.topicInput.value=e.topic),e.pageTitle&&(this.lastPageTitle=e.pageTitle),e.pageUrl&&(this.lastPageUrl=e.pageUrl),e.isPdf?this.showPdfSegmentSelector(e.pdfData,e.pdfUrl).then(async t=>{if(null!==t){this.setLoading(!0);try{let i=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:e.pdfUrl,segmentIndex:t})});if(i.ok){let o=await i.json();this.continueWithSelectedSegment(o.content,e.topic)}else this.showError("Failed to retrieve PDF segment. Please try again."),this.setLoading(!1)}catch(n){console.error("Error retrieving PDF segment:",n),this.showError("Failed to retrieve PDF segment. Please try again."),this.setLoading(!1)}}}):this.showSegmentSelector(e.fullText,e.topic).then(t=>{t&&this.continueWithSelectedSegment(t,e.topic)})}catch(i){console.error("Failed to restore segment selection:",i),localStorage.removeItem(this.segmentStateKey)}}async continueWithSelectedSegment(t,e){try{this.setLoading(!0);let i={content:t,title:this.lastPageTitle||"Current Page",url:this.lastPageUrl||window.location.href};this.lastPageTitle=i.title,this.lastPageUrl=i.url;let o=localStorage.getItem("quotely_specificity")||"balanced",n=await fetch(`${this.serverUrl}/api/find-quotes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:e,pageContent:t,pageUrl:this.lastPageUrl,pageTitle:this.lastPageTitle,isOCR:!1,fromPdf:this.isPdfPage||!1,specificity:o})});if(!n.ok){if(413===n.status){this.showError("The page is too large to analyze. Try a simpler page or select text and paste it instead.");return}throw Error(`Server error: ${n.status}`)}let a=await n.json();if(a.quotes&&a.quotes.length>0){this.lastPageTitle=a.pageTitle||this.lastPageTitle,this.lastPageUrl=a.pageUrl||this.lastPageUrl;let s=a.quotes.map(t=>({...t,fromPdf:void 0!==a.fromPdf?a.fromPdf:this.isPdfPage||!1}));this.displayQuotes(s,this.lastPageTitle,this.lastPageUrl)}else this.showError("No relevant quotes found. Try a different topic or check if the page has relevant content.")}catch(r){console.error("Error finding quotes:",r),this.showError("Failed to find quotes. The server might be offline. Please try again later.")}finally{this.setLoading(!1)}}saveCitationToStorage(t,e,i,o,n,a=!0){try{let s=JSON.parse(localStorage.getItem(this.citationsKey)||"{}"),r=`${o}_${t}`;s[r]={data:e,pageTitle:i,pageUrl:o,format:n,quoteText:t,isVisible:a,timestamp:Date.now()},localStorage.setItem(this.citationsKey,JSON.stringify(s))}catch(l){console.error("Failed to save citation:",l)}}restoreCitations(){try{let t=JSON.parse(localStorage.getItem(this.citationsKey)||"{}"),e=this.lastPageUrl;if(!e)return;Object.keys(t).forEach(i=>{if(i.startsWith(`${e}_`)){let o=t[i],n=o.quoteText,a=o.format;a===this.citationFormat.value&&this.displayStoredCitationByQuote(n,o)}})}catch(i){console.error("Failed to restore citations:",i)}}displayStoredCitationByQuote(t,e){let i=document.querySelectorAll("#quotes-container .quote-item"),o=null,n=null;for(let a of i){let s=a.querySelector(".quote-text").textContent.replace(/"/g,"");if(s===t){o=a;let r=a.querySelector(".quote-pin");r&&(n=r.getAttribute("data-index"));break}}if(!o||!n)return;let l=document.getElementById(`citation-${n}`);if(!l||""!==l.innerHTML.trim())return;l.innerHTML=`
            <div class="citation-box">
                <div class="citation-item">
                    <div class="citation-text">${e.citationData.citation}</div>
                    <button class="citation-copy-btn" data-citation="${e.citationData.citation.replace(/"/g,"&quot;")}">
                        Copy
                    </button>
                </div>
                ${e.citationData.inTextCitation?`
                    <div class="citation-divider"></div>
                    <div class="citation-item">
                        <div class="citation-text">${e.citationData.inTextCitation.parenthetical||e.citationData.inTextCitation.narrative}</div>
                        <button class="citation-copy-btn" data-citation="${(e.citationData.inTextCitation.parenthetical||e.citationData.inTextCitation.narrative).replace(/"/g,"&quot;")}">
                            Copy
                        </button>
                    </div>
                `:""}
            </div>
        `,l.style.display=e.isVisible?"block":"none";let d=o.querySelector(".generate-citation-btn");d&&(d.innerHTML=e.isVisible?"Hide Citation":"Show Citation");let c=l.querySelectorAll(".citation-copy-btn");c.forEach(t=>{t.addEventListener("click",()=>{let e=t.getAttribute("data-citation");this.copyCitation(e)})})}clearStoredCitations(){try{localStorage.removeItem(this.citationsKey)}catch(t){console.error("Failed to clear stored citations:",t)}}clearStoredPins(){try{localStorage.removeItem("quotely_pinned")}catch(t){console.error("Failed to clear stored pins:",t)}}appendPinnedQuotesFromOtherSites(){try{let t=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");if(this.lastPageUrl,0===t.length)return;t.forEach((t,e)=>{let i=this.createPinnedQuoteElement(t,`pinned-${e}`);this.quotesContainer.appendChild(i)})}catch(e){console.error("Failed to append pinned quotes from other sites:",e)}}createPinnedQuoteElement(t,e){let i=document.createElement("div");i.className="quote-item pinned",i.setAttribute("data-pinned-id",e);let o=t.fromPdf||!1,n=o?'<button class="action-btn generate-citation-btn pdf-no-citation" disabled>Citation Unavailable</button>':`<button class="action-btn generate-citation-btn" data-pinned-id="${e}" data-title="${t.pageTitle.replace(/"/g,"&quot;")}" data-url="${t.url.replace(/"/g,"&quot;")}">
                Generate Citation
            </button>`;i.innerHTML=`
            <div class="quote-pin" data-pinned-id="${e}" data-from-pdf="${o}" style="opacity: 1;">
                <img src="../media/Pin.png" alt="Pin" style="width: 16px; height: 19px;">
            </div>
            <div class="quote-text">"${t.quote}"</div>
            <div class="quote-actions">
                <button class="action-btn copy-btn" data-quote="${t.quote.replace(/"/g,"&quot;")}">
                    Copy Quote
                </button>
                ${n}
                <div class="quote-help" data-help="Pinned from ${t.pageTitle}">
                    <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
                </div>
            </div>
            <div class="citation-display" id="citation-${e}" style="display: none;"></div>
        `;let a=i.querySelector(".copy-btn"),s=i.querySelector(".generate-citation-btn"),r=i.querySelector(".quote-pin");if(ClickSpark({sparkColor:"#4287f5",sparkSize:15,sparkRadius:65,sparkCount:12,duration:300,children:a}),a.addEventListener("click",()=>{let t=a.getAttribute("data-quote");this.copyQuote(t),a.classList.add("pop-animation"),setTimeout(()=>{a.classList.remove("pop-animation")},300)}),r.addEventListener("click",()=>{this.removePinnedQuote(e,t.quote)}),s&&!s.classList.contains("pdf-no-citation")&&s.addEventListener("click",()=>{let t=s.getAttribute("data-pinned-id"),e=s.getAttribute("data-title"),i=s.getAttribute("data-url"),o=document.getElementById(`citation-${t}`);o&&""!==o.innerHTML.trim()?this.toggleCitation(t):this.generateCitation(t,e,i)}),t.citation){let l=i.querySelector(`#citation-${e}`);if(l){l.innerHTML=t.citation;let d=!1!==t.citationVisible;l.style.display=d?"block":"none",s.innerHTML=d?"Hide Citation":"Generate Citation"}}return i}removePinnedQuote(t,e){try{let i=document.querySelector(`[data-pinned-id="${t}"]`);i&&i.remove();let o=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),n=o.filter(t=>t.quote!==e);localStorage.setItem("quotely_pinned",JSON.stringify(n))}catch(a){console.error("Failed to remove pinned quote:",a)}}checkAndRestorePins(){try{JSON.parse(localStorage.getItem("quotely_pinned")||"[]");let t=document.querySelectorAll("#quotes-container .quote-item");t.length>0&&this.lastPageUrl&&this.restorePinnedState()}catch(e){console.error("Failed to check and restore pins:",e)}}updatePinnedStorage(){try{JSON.parse(localStorage.getItem("quotely_pinned")||"[]");let t=document.querySelectorAll("#quotes-container .quote-item"),e=[];t.forEach(t=>{if(t.classList.contains("pinned")){let i=t.querySelector(".quote-pin");if(i){let o=parseInt(i.getAttribute("data-index")),n="true"===i.getAttribute("data-from-pdf"),a=t.querySelector(".quote-text").textContent.replace(/"/g,""),s=document.getElementById(`citation-${o}`),r=s&&""!==s.innerHTML.trim(),l={index:o,quote:a,url:this.lastPageUrl,pageTitle:this.lastPageTitle,citation:r?s.innerHTML:null,citationVisible:r&&"none"!==s.style.display,fromPdf:n,timestamp:Date.now()};e.push(l)}}}),localStorage.setItem("quotely_pinned",JSON.stringify(e))}catch(i){console.error("Failed to update pinned storage:",i)}}toggleCitation(t){let e=document.getElementById(`citation-${t}`),i,o;if("string"==typeof t&&t.startsWith("pinned-")){i=document.querySelector(`[data-pinned-id="${t}"].generate-citation-btn`);let n=i?.closest(".quote-item");n&&(o=n.querySelector(".quote-text").textContent.replace(/"/g,""))}else{let a=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");a&&(i=a.querySelector(".generate-citation-btn"),o=a.querySelector(".quote-text").textContent.replace(/"/g,""))}"none"===e.style.display||""===e.style.display?(e.style.display="block",i.innerHTML="Hide Citation",this.updateQuoteCitationState(o,!0,!0)):(e.style.display="none",i.innerHTML="Show Citation",this.updateQuoteCitationState(o,!0,!1))}getQuotesList(){try{return JSON.parse(localStorage.getItem(this.quotesKey)||"[]")}catch(t){return console.error("Failed to get quotes list:",t),[]}}saveQuotesList(t){try{localStorage.setItem(this.quotesKey,JSON.stringify(t))}catch(e){console.error("Failed to save quotes list:",e)}}updateQuoteCitationState(t,e,i,o=null){try{let n=this.getQuotesList(),a=this.lastPageUrl;if(!a)return;let s=n.find(e=>e.quoteText===t&&e.pageUrl===a);s||(s={quoteText:t,pageUrl:a,pageTitle:this.lastPageTitle,hasCitation:!1,isVisible:!1,citationData:null,timestamp:Date.now()},n.push(s)),s.hasCitation=e,s.isVisible=i,o&&(s.citationData=o),s.timestamp=Date.now(),this.saveQuotesList(n)}catch(r){console.error("Failed to update quote citation state:",r)}}getQuoteCitationState(t){try{let e=this.getQuotesList(),i=this.lastPageUrl;if(!i)return{hasCitation:!1,isVisible:!1,citationData:null};let o=e.find(e=>e.quoteText===t&&e.pageUrl===i);if(o)return{hasCitation:o.hasCitation||!1,isVisible:o.isVisible||!1,citationData:o.citationData||null};return{hasCitation:!1,isVisible:!1,citationData:null}}catch(n){return console.error("Failed to get quote citation state:",n),{hasCitation:!1,isVisible:!1,citationData:null}}}clearCurrentPageQuotes(){try{let t=this.getQuotesList(),e=this.lastPageUrl;if(!e)return;let i=t.filter(t=>t.pageUrl!==e);this.saveQuotesList(i)}catch(o){console.error("Failed to clear current page quotes:",o)}}restoreAllCitationStates(){try{let t=document.querySelectorAll("#quotes-container .quote-item");t.forEach(t=>{let e=t.querySelector(".quote-text").textContent.replace(/"/g,""),i=this.getQuoteCitationState(e);i.hasCitation&&this.displayStoredCitationByQuote(e,i)})}catch(e){console.error("Failed to restore citation states:",e)}}togglePin(t,e){let i=e.closest(".quote-item"),o=i.classList.contains("pinned");o?(i.classList.remove("pinned"),e.style.opacity="0.5",this.removeFromPinned(t)):(i.classList.add("pinned"),e.style.opacity="1",this.addToPinned(t)),this.reorderQuotes(),this.updatePinnedStorage()}addToPinned(t){try{let e=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),i=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");if(!i)return;let o=i.querySelector(".quote-pin"),n="true"===o.getAttribute("data-from-pdf"),a=i.querySelector(".quote-text").textContent.replace(/"/g,""),s=document.getElementById(`citation-${t}`),r=s&&""!==s.innerHTML.trim(),l={index:t,quote:a,url:this.lastPageUrl,pageTitle:this.lastPageTitle,citation:r?s.innerHTML:null,citationVisible:r&&"none"!==s.style.display,fromPdf:n,timestamp:Date.now()},d=e.find(t=>t.quote===a);d||(e.push(l),localStorage.setItem("quotely_pinned",JSON.stringify(e)))}catch(c){console.error("Failed to pin quote:",c)}}removeFromPinned(t){try{let e=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),i=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");if(!i)return;let o=i.querySelector(".quote-text").textContent.replace(/"/g,""),n=e.filter(t=>t.quote!==o);localStorage.setItem("quotely_pinned",JSON.stringify(n))}catch(a){console.error("Failed to unpin quote:",a)}}reorderQuotes(){let t=document.getElementById("quotes-container"),e=Array.from(t.children),i=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");e.sort((t,e)=>{let o=parseInt(t.querySelector(".quote-pin").getAttribute("data-index")),n=parseInt(e.querySelector(".quote-pin").getAttribute("data-index")),a=t.querySelector(".quote-text").textContent.replace(/"/g,""),s=e.querySelector(".quote-text").textContent.replace(/"/g,""),r=i.some(t=>t.quote===a),l=i.some(t=>t.quote===s);return r&&!l?-1:!r&&l?1:o-n}),e.forEach(e=>t.appendChild(e)),setTimeout(()=>{this.restoreCitations()},100)}restorePinnedState(){try{let t=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");if(0===t.length)return;let e=document.querySelectorAll("#quotes-container .quote-item:not([data-pinned-id])");if(0===e.length)return;let i=0;e.forEach((e,o)=>{let n=e.querySelector(".quote-pin");if(n){let a=parseInt(n.getAttribute("data-index")),s=e.querySelector(".quote-text").textContent.replace(/"/g,""),r=t.find(t=>t.quote===s);if(r){e.classList.add("pinned"),n.style.opacity="1",i++;let l=document.getElementById(`citation-${a}`);if(r.citation&&l){l.innerHTML=r.citation;let d=!1!==r.citationVisible;l.style.display=d?"block":"none";let c=e.querySelector(".generate-citation-btn");c&&(c.innerHTML=d?"Hide Citation":"Generate Citation")}}}}),this.reorderQuotes(),this.restoreCitations()}catch(o){console.error("Failed to restore pinned state:",o)}}isProtectedSite(t){if(!t||!t.content)return!0;let e=t.content.toLowerCase(),i=t.content.length;if(i>400)return!1;for(let o of["sign in to continue","log in to access","subscription required","premium content","paywall","please log in","access denied","members only","subscribe to read","login required","authentication required","please sign in","register to continue","0:000:00","want to print","create account","free trial","upgrade to premium","content locked","restricted access","login to view","sign up to read","subscription needed","premium subscription","unlock this article","continue reading with","read more with subscription","limited preview","sample content only","partial content","excerpt only"])if(e.includes(o))return!0;for(let n of[/you have reached your.*free.*article.*limit/i,/free articles remaining/i,/subscribe to continue reading/i,/unlock.*articles.*with.*subscription/i,/premium.*subscription.*required/i,/members.*only.*content/i,/login.*required.*to.*view/i,/sign.*in.*to.*continue.*reading/i])if(n.test(e))return!0;return!1}showSettings(){let t=document.getElementById("settings-popup"),e=document.getElementById("settings-btn");t&&t.classList.add("show"),e&&e.classList.add("rotated"),localStorage.setItem("quotely_settings_open","true")}hideSettings(){let t=document.getElementById("settings-popup"),e=document.getElementById("settings-btn");t&&t.classList.remove("show"),e&&e.classList.remove("rotated"),localStorage.setItem("quotely_settings_open","false")}toggleSettings(){let t=document.getElementById("settings-popup");t&&t.classList.contains("show")?this.hideSettings():this.showSettings()}restoreSettingsState(){try{let t=localStorage.getItem("quotely_settings_open");"true"===t&&this.showSettings()}catch(e){console.error("Failed to restore settings state:",e)}}toggleTheme(){let t=document.getElementById("theme-toggle"),e=t.checked;localStorage.setItem("quotely_dark_mode",e?"true":"false"),this.applyTheme(e),console.log("Theme toggle:",e?"Dark Mode":"Light Mode")}applyTheme(t){let e=document.querySelector(".container");t?e.classList.add("dark-mode"):e.classList.remove("dark-mode")}restoreTheme(){try{let t=localStorage.getItem("quotely_dark_mode"),e="true"===t,i=document.getElementById("theme-toggle");i&&(i.checked=e),this.applyTheme(e)}catch(o){console.error("Failed to restore theme:",o)}}restoreSpecificity(){try{let t=localStorage.getItem("quotely_specificity");if(t){let e=document.querySelectorAll(".segmented-btn");e.forEach(i=>{i.dataset.value===t&&(e.forEach(t=>t.classList.remove("active")),i.classList.add("active"))})}}catch(i){console.error("Failed to restore specificity:",i)}}}document.addEventListener("DOMContentLoaded",()=>{window.quotelyPopup=new QuotelyPopup});