class QuotelyPopup{constructor(){this.serverUrl="https://quotely-rmgh.onrender.com",this.lastPageTitle=null,this.lastPageUrl=null,this.storageKey="quotely_last_session",this.citationsKey="quotely_citations",this.quotesKey="quotely_quotes",this.segmentStateKey="quotely_segment_state",this.initializeElements(),this.attachEventListeners(),this.restoreLastSession(),this.checkPendingSegmentSelection()}initializeElements(){this.topicInput=document.getElementById("topic-input"),this.findQuotesBtn=document.getElementById("find-quotes-btn"),this.resultsSection=document.getElementById("results-section"),this.quotesContainer=document.getElementById("quotes-container"),this.errorMessage=document.getElementById("error-message"),this.citationFormat=document.getElementById("citation-format"),this.btnText=this.findQuotesBtn.querySelector(".btn-text"),this.searchIcon=this.findQuotesBtn.querySelector(".search-icon"),this.loadingSpinner=this.findQuotesBtn.querySelector(".loading-spinner")}attachEventListeners(){this.findQuotesBtn.addEventListener("click",()=>this.findQuotes()),this.topicInput.addEventListener("keypress",t=>{"Enter"===t.key&&t.ctrlKey&&this.findQuotes()}),this.topicInput.addEventListener("input",()=>{this.saveCurrentInput()}),this.citationFormat.addEventListener("change",()=>this.updateAllCitations())}autoResizeTextarea(){this.topicInput.style.height="auto";let t=Math.min(this.topicInput.scrollHeight+4,120);this.topicInput.style.height=t+"px"}saveCurrentInput(){let t=this.topicInput.value;t.trim()&&localStorage.setItem("quotely_current_topic",t)}async findQuotes(){let t=this.topicInput.value.trim();if(!t){this.showError("Please enter a topic to search for quotes.");return}localStorage.removeItem(this.segmentStateKey),this.clearCurrentPageQuotes();let e=document.querySelector(".container");e.classList.remove("expanded","medium-expanded","segment-expanded"),this.setLoading(!0),this.hideError(),this.hideResults();try{let[i]=await chrome.tabs.query({active:!0,currentWindow:!0}),n=i.url&&(i.url.includes(".pdf")||i.url.startsWith("file://")&&i.url.endsWith(".pdf")),a;if(n){try{let o;if(i.url.startsWith("file://")){let r=await fetch(i.url).then(t=>t.blob()),s=await r.arrayBuffer(),l=btoa(new Uint8Array(s).reduce((t,e)=>t+String.fromCharCode(e),""));o={fileContent:l,title:i.title||"Local PDF",isLocalFile:!0}}else o={url:i.url,title:i.title};let c=await fetch(`${this.serverUrl}/api/extract-pdf`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(c.ok){if((a=await c.json()).requiresSegmentation){this.setLoading(!1);let d=await this.showPdfSegmentSelector(a,i.url);if(null===d)return;let u=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:i.url,segmentIndex:d})});if(!u.ok)throw Error(`Segment retrieval failed: ${u.status}`);let p=await u.json();a={content:p.content,title:a.title,url:a.url},this.setLoading(!0)}}else throw Error(`PDF extraction failed: ${c.status}`)}catch(h){console.error("PDF extraction error:",h),"scanned_pdf_too_large"===a.error&&a.message?this.showError(a.message):this.showError("This PDF page is protected. Download this pdf locally then try again.");return}if(a&&"scanned_pdf_too_large"===a.error){this.setLoading(!1),this.showError("This PDF requires scanning but exceeds the 30-page limit for OCR processing.");return}}else{let g=await chrome.scripting.executeScript({target:{tabId:i.id},func(){let t=function t(){let e=document.documentElement.outerHTML,i=new DOMParser,n=i.parseFromString(e,"text/html");["script","style","noscript","iframe","embed","object","nav","header","footer","aside","menu","sidebar",".nav",".navbar",".menu",".sidebar",".footer",".header",".navigation",".breadcrumb",".pagination",".ads",".advertisement",".social",".share",".comments",".related",".recommended",".cookie-banner",".popup",".modal",".overlay"].forEach(t=>{let e=n.querySelectorAll(t);e.forEach(t=>t.remove())});let a=null;for(let o of["main","article",'[role="main"]',".content","#content",".main-content",".article-content",".post-content",".entry-content",".document-content",".page-content",".text-content",".blog-content",".post-body",".single-post",".post",".entry",".story"]){let r=n.querySelector(o);if(r&&r.textContent.trim().length>500){a=r;break}}if(!a){let s=n.body;if(s){let l=s.querySelectorAll("div, section, p"),c=null,d=0;l.forEach(t=>{let e=t.textContent.trim(),i=e.length;if(i<200||i>1e5)return;let n=t.querySelectorAll("a").length,a=t.querySelectorAll("p").length,o=t.querySelectorAll("img").length,r=3*a-n-2*o+i/100;r>d&&(d=r,c=t)}),c&&(a=c)}}a||(a=n.body||n.documentElement);let u=a?a.textContent:"";return u=u.replace(/\s+/g," ").replace(/^\s+|\s+$/g,"").replace(/[^\w\s.,!?;:'"()-]/g,"").trim()}();return{content:t,url:window.location.href,title:document.title}}}).catch(()=>[]);if(!g||0===g.length||!g[0]||!g[0].result||!g[0].result.content){this.showError("Cannot access this page content. Try another tab.");return}a=g[0].result}if(this.lastPageTitle=a.title||"Current Page",this.lastPageUrl=a.url||"Unknown URL",a.content&&a.content.length>5e4){this.setLoading(!1);let y=await this.showSegmentSelector(a.content);if(null===y)return;a.content=y,this.setLoading(!0)}let m=(a.content||"").slice(0,5e4),q=await fetch(`${this.serverUrl}/api/find-quotes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:t,pageContent:m,pageUrl:this.lastPageUrl,pageTitle:this.lastPageTitle,isOCR:a.isOCR||!1})});if(!q.ok){if(413===q.status){this.showError("The page is too large to analyze. Try a simpler page or select text and paste it instead.");return}throw Error(`Server error: ${q.status}`)}let f=await q.json();f.quotes&&f.quotes.length>0?(this.lastPageTitle=f.pageTitle||this.lastPageTitle,this.lastPageUrl=f.pageUrl||this.lastPageUrl,this.displayQuotes(f.quotes,this.lastPageTitle,this.lastPageUrl)):this.showError("No relevant quotes found. Try a different topic or check if the page has relevant content.")}catch(v){console.error("Error finding quotes:",v),this.showError("Failed to find quotes. The server might be offline. Please try again later.")}finally{this.setLoading(!1)}}async showPdfSegmentSelector(t,e=null){let i={isPdf:!0,pdfData:t,pdfUrl:e,topic:this.topicInput.value,pageTitle:this.lastPageTitle||t.title,pageUrl:this.lastPageUrl||e,timestamp:Date.now()};return localStorage.setItem(this.segmentStateKey,JSON.stringify(i)),new Promise(e=>{this.hideResults(),this.hideError();let i=document.querySelector(".results-header");i&&(i.style.display="none");let n=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 0px;">Woah, that's a lot of text! (${Math.round(t.totalLength/1e3)}k characters)</p>
                        <p style="margin-top: 0; margin-bottom: 8px;">Select a segment to scan:</p>
                        <div class="segments-list">
                            ${this.createSegmentRows(t.segments)}
                        </div>
                    </div>
                </div>
            `;this.quotesContainer.innerHTML=n,this.resultsSection.style.display="block";let a=document.querySelector(".container");a.classList.add("segment-expanded"),setTimeout(()=>{let t=this.quotesContainer.querySelectorAll(".segment-option");t.forEach(t=>{t.addEventListener("click",()=>{let i=parseInt(t.dataset.index);localStorage.removeItem(this.segmentStateKey);let n=document.querySelector(".container");n.classList.remove("expanded","medium-expanded","segment-expanded"),this.hideResults(),e(i)})})},100)})}createSegmentRows(t){let e=[];for(let i=0;i<t.length;i+=5){let n=t.slice(i,i+5),a=`
                <div class="segment-row">
                    ${n.map(t=>`
                        <button class="segment-option" data-index="${t.index}" title="Characters ${t.start.toLocaleString()} - ${t.end.toLocaleString()}">
                            ${t.index+1}
                        </button>
                    `).join("")}
                </div>
            `;e.push(a)}return e.join("")}async showSegmentSelector(t,e=null){let i={fullText:t,topic:e||this.topicInput.value,pageTitle:this.lastPageTitle,pageUrl:this.lastPageUrl,timestamp:Date.now()};return localStorage.setItem(this.segmentStateKey,JSON.stringify(i)),new Promise(e=>{let i=[];for(let n=0;n<t.length;n+=5e4){let a=t.substring(n,Math.min(n+5e4,t.length)),o=this.escapeHtml(a.substring(0,150).trim())+"...";i.push({index:i.length,start:n,end:Math.min(n+5e4,t.length),preview:o})}this.hideResults(),this.hideError();let r=document.querySelector(".results-header");r&&(r.style.display="none");let s=`
                <div class="segment-container">
                    <div class="segment-selector">
                        <p style="margin-bottom: 0px;">Woah, that's a lot of text! (${Math.round(t.length/1e3)}k characters)</p>
                        <p style="margin-top: 0; margin-bottom: 8px;">Select a segment to scan:</p>
                        <div class="segments-list">
                            ${this.createSegmentRows(i)}
                        </div>
                    </div>
                </div>
            `;this.quotesContainer.innerHTML=s,this.resultsSection.style.display="block";let l=document.querySelector(".container");l.classList.add("segment-expanded"),setTimeout(()=>{let i=this.quotesContainer.querySelectorAll(".segment-option");i.forEach(i=>{i.addEventListener("click",()=>{let n=parseInt(i.dataset.index),a=5e4*n,o=Math.min(a+5e4,t.length),r=t.substring(a,o);localStorage.removeItem(this.segmentStateKey);let s=document.querySelector(".container");s.classList.remove("expanded","medium-expanded","segment-expanded"),this.hideResults(),e(r)})})},100)})}escapeHtml(t){let e=document.createElement("div");return e.textContent=t,e.innerHTML}displayQuotes(t,e,i){this.quotesContainer.innerHTML="";let n=document.querySelector(".results-header");n&&(n.style.display=""),this.appendPinnedQuotesFromOtherSites();let a=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),o=a.map(t=>t.quote),r=t.filter(t=>{let e=t.quote||t;return!o.includes(e)});r.forEach((t,n)=>{let a=this.createQuoteElement(t,n,e,i);this.quotesContainer.appendChild(a)}),this.showResults(),this.saveSession(t,e,i),this.restoreAllCitationStates();let s=document.querySelector(".container");s.classList.remove("medium-expanded"),s.classList.add("expanded")}createQuoteElement(t,e,i,n){let a=document.createElement("div");a.className="quote-item";let o=t.quote||t,r=t.relevance||"Relevant to topic";a.innerHTML=`
            <div class="quote-pin" data-index="${e}">
                <img src="../media/Pin.png" alt="Pin" style="width: 16px; height: 19px;">
            </div>
            <div class="quote-text">"${o}"</div>
            <div class="quote-actions">
                <button class="action-btn copy-btn" data-quote="${o.replace(/"/g,"&quot;")}">
                    Copy Quote
                </button>
                <button class="action-btn generate-citation-btn" data-index="${e}" data-title="${i.replace(/"/g,"&quot;")}" data-url="${n.replace(/"/g,"&quot;")}">
                    Generate Citation
                </button>
                <div class="quote-help" data-help="${r.replace(/"/g,"&quot;")}">
                    <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
                </div>
            </div>
            <div class="citation-display" id="citation-${e}" style="display: none;"></div>
        `;let s=a.querySelector(".copy-btn"),l=a.querySelector(".generate-citation-btn"),c=a.querySelector(".quote-pin");return s.addEventListener("click",()=>{let t=s.getAttribute("data-quote");this.copyQuote(t)}),c.addEventListener("click",()=>{let t=parseInt(c.getAttribute("data-index"));this.togglePin(t,c)}),l.addEventListener("click",()=>{let t=parseInt(l.getAttribute("data-index")),e=l.getAttribute("data-title"),i=l.getAttribute("data-url"),n=document.getElementById(`citation-${t}`);n&&""!==n.innerHTML.trim()?this.toggleCitation(t):this.generateCitation(t,e,i)}),a}async generateCitation(t,e,i){let n,a;if("string"==typeof t&&t.startsWith("pinned-")){if(!(n=document.querySelector(`[data-pinned-id="${t}"]`)?.closest(".quote-item"))){console.error("Pinned quote element not found for ID:",t);return}a=n.querySelector(".quote-text").textContent.replace(/"/g,"")}else{if(!(n=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item"))){console.error("Quote element not found for index:",t);return}a=n.querySelector(".quote-text").textContent.replace(/"/g,"")}let o=document.getElementById(`citation-${t}`),r=this.citationFormat.value,s=n.querySelector(".generate-citation-btn"),l=s.textContent;s.innerHTML=`
            <div class="loading-spinner"></div>
            Generating...
        `,s.disabled=!0;try{let c=await fetch(`${this.serverUrl}/api/format-citation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({quote:a,pageTitle:e,pageUrl:i,format:r})});if(c.ok){let d=await c.json();o.innerHTML=`
                    <div class="citation-item">
                        <div class="citation-text">${d.citation}</div>
                        <button class="citation-copy-btn" data-citation="${d.citation.replace(/"/g,"&quot;")}">
                            Copy
                        </button>
                    </div>
                    ${d.inTextCitation?`
                        <div class="citation-divider"></div>
                        <div class="citation-item">
                            <div class="citation-text">${d.inTextCitation.parenthetical||d.inTextCitation.narrative}</div>
                            <button class="citation-copy-btn" data-citation="${(d.inTextCitation.parenthetical||d.inTextCitation.narrative).replace(/"/g,"&quot;")}">
                                Copy
                            </button>
                        </div>
                    `:""}
                `,o.style.display="block";let u=o.querySelectorAll(".citation-copy-btn");u.forEach(t=>{t.addEventListener("click",()=>{let e=t.getAttribute("data-citation");this.copyCitation(e)})}),this.updateQuoteCitationState(a,!0,!0,d),s.innerHTML="Hide Citation",s.disabled=!1}else throw Error(`Server error: ${c.status}`)}catch(p){console.error("Error generating citation:",p),o.innerHTML=`
                <div style="color: #dc2626; text-align: center; padding: 12px; background: #fef2f2; border: 1px solid #fecaca; border-radius: 6px;">
                    Error generating citation. Please try again.
                </div>
            `,o.style.display="block",s.innerHTML=l,s.disabled=!1}}updateAllCitations(){this.restoreCitations();let t=document.querySelectorAll(".citation-display");t.forEach(t=>{if("none"!==t.style.display){let e=t.closest(".quote-item");e.querySelector(".quote-text").textContent.replace(/"/g,"");let i=this.lastPageTitle||"Current Page",n=this.lastPageUrl||"Current URL";this.generateCitation(Array.from(e.parentNode.children).indexOf(e),i,n)}})}copyQuote(t){navigator.clipboard.writeText(t).then(()=>{}).catch(t=>{console.error("Failed to copy quote:",t)})}copyCitation(t){navigator.clipboard.writeText(t).then(()=>{}).catch(t=>{console.error("Failed to copy citation:",t)})}showTemporaryMessage(t){let e=document.createElement("div");e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            font-size: 12px;
            z-index: 1000;
        `,e.textContent=t,document.body.appendChild(e),setTimeout(()=>{e.remove()},2e3)}setLoading(t){this.findQuotesBtn.disabled=t,this.btnText.style.display=t?"none":"block",this.searchIcon.style.display=t?"none":"block",this.loadingSpinner.style.display=t?"block":"none"}showResults(){this.resultsSection.style.display="block"}hideResults(){this.resultsSection.style.display="none"}showError(t){this.errorMessage.textContent=t,this.errorMessage.style.display="block";let e=document.querySelector(".container");e.classList.remove("expanded"),e.classList.add("medium-expanded")}hideError(){this.errorMessage.style.display="none"}saveSession(t,e,i){try{let n={quotes:t,pageTitle:e,pageUrl:i,topic:this.topicInput.value.trim(),timestamp:Date.now()};localStorage.setItem(this.storageKey,JSON.stringify(n))}catch(a){console.error("Failed to save session:",a)}}restoreLastSession(){try{let t=localStorage.getItem("quotely_current_topic");t&&(this.topicInput.value=t);let e=localStorage.getItem(this.storageKey);if(!e)return;let i=JSON.parse(e);if(Date.now()-i.timestamp>864e5)return;!t&&i.topic&&(this.topicInput.value=i.topic),i.quotes&&i.quotes.length>0&&(this.lastPageTitle=i.pageTitle,this.lastPageUrl=i.pageUrl,this.displayQuotes(i.quotes,i.pageTitle,i.pageUrl))}catch(n){console.error("Failed to restore session:",n)}}checkPendingSegmentSelection(){try{let t=localStorage.getItem(this.segmentStateKey);if(!t)return;let e=JSON.parse(t);if(Date.now()-e.timestamp>36e5){localStorage.removeItem(this.segmentStateKey);return}e.topic&&(this.topicInput.value=e.topic),e.pageTitle&&(this.lastPageTitle=e.pageTitle),e.pageUrl&&(this.lastPageUrl=e.pageUrl),e.isPdf?this.showPdfSegmentSelector(e.pdfData,e.pdfUrl).then(async t=>{if(null!==t){this.setLoading(!0);try{let i=await fetch(`${this.serverUrl}/api/get-pdf-segment`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pdfUrl:e.pdfUrl,segmentIndex:t})});if(i.ok){let n=await i.json();this.continueWithSelectedSegment(n.content,e.topic)}else this.showError("Failed to retrieve PDF segment. Please try again."),this.setLoading(!1)}catch(a){console.error("Error retrieving PDF segment:",a),this.showError("Failed to retrieve PDF segment. Please try again."),this.setLoading(!1)}}}):this.showSegmentSelector(e.fullText,e.topic).then(t=>{t&&this.continueWithSelectedSegment(t,e.topic)})}catch(i){console.error("Failed to restore segment selection:",i),localStorage.removeItem(this.segmentStateKey)}}async continueWithSelectedSegment(t,e){try{this.setLoading(!0);let i={content:t,title:this.lastPageTitle||"Current Page",url:this.lastPageUrl||window.location.href};this.lastPageTitle=i.title,this.lastPageUrl=i.url;let n=await fetch(`${this.serverUrl}/api/find-quotes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({topic:e,pageContent:t,pageUrl:this.lastPageUrl,pageTitle:this.lastPageTitle,isOCR:!1})});if(!n.ok){if(413===n.status){this.showError("The page is too large to analyze. Try a simpler page or select text and paste it instead.");return}throw Error(`Server error: ${n.status}`)}let a=await n.json();a.quotes&&a.quotes.length>0?(this.lastPageTitle=a.pageTitle||this.lastPageTitle,this.lastPageUrl=a.pageUrl||this.lastPageUrl,this.displayQuotes(a.quotes,this.lastPageTitle,this.lastPageUrl)):this.showError("No relevant quotes found. Try a different topic or check if the page has relevant content.")}catch(o){console.error("Error finding quotes:",o),this.showError("Failed to find quotes. The server might be offline. Please try again later.")}finally{this.setLoading(!1)}}saveCitationToStorage(t,e,i,n,a,o=!0){try{let r=JSON.parse(localStorage.getItem(this.citationsKey)||"{}"),s=`${n}_${t}`;r[s]={data:e,pageTitle:i,pageUrl:n,format:a,quoteText:t,isVisible:o,timestamp:Date.now()},localStorage.setItem(this.citationsKey,JSON.stringify(r))}catch(l){console.error("Failed to save citation:",l)}}restoreCitations(){try{let t=JSON.parse(localStorage.getItem(this.citationsKey)||"{}"),e=this.lastPageUrl;if(!e)return;Object.keys(t).forEach(i=>{if(i.startsWith(`${e}_`)){let n=t[i],a=n.quoteText,o=n.format;o===this.citationFormat.value&&this.displayStoredCitationByQuote(a,n)}})}catch(i){console.error("Failed to restore citations:",i)}}displayStoredCitationByQuote(t,e){let i=document.querySelectorAll("#quotes-container .quote-item"),n=null,a=null;for(let o of i){let r=o.querySelector(".quote-text").textContent.replace(/"/g,"");if(r===t){n=o;let s=o.querySelector(".quote-pin");s&&(a=s.getAttribute("data-index"));break}}if(!n||!a)return;let l=document.getElementById(`citation-${a}`);if(!l||""!==l.innerHTML.trim())return;l.innerHTML=`
            <div class="citation-box">
                <div class="citation-item">
                    <div class="citation-text">${e.citationData.citation}</div>
                    <button class="citation-copy-btn" data-citation="${e.citationData.citation.replace(/"/g,"&quot;")}">
                        Copy
                    </button>
                </div>
                ${e.citationData.inTextCitation?`
                    <div class="citation-divider"></div>
                    <div class="citation-item">
                        <div class="citation-text">${e.citationData.inTextCitation.parenthetical||e.citationData.inTextCitation.narrative}</div>
                        <button class="citation-copy-btn" data-citation="${(e.citationData.inTextCitation.parenthetical||e.citationData.inTextCitation.narrative).replace(/"/g,"&quot;")}">
                            Copy
                        </button>
                    </div>
                `:""}
            </div>
        `,l.style.display=e.isVisible?"block":"none";let c=n.querySelector(".generate-citation-btn");c&&(c.innerHTML=e.isVisible?"Hide Citation":"Show Citation");let d=l.querySelectorAll(".citation-copy-btn");d.forEach(t=>{t.addEventListener("click",()=>{let e=t.getAttribute("data-citation");this.copyCitation(e)})})}clearStoredCitations(){try{localStorage.removeItem(this.citationsKey)}catch(t){console.error("Failed to clear stored citations:",t)}}clearStoredPins(){try{localStorage.removeItem("quotely_pinned")}catch(t){console.error("Failed to clear stored pins:",t)}}appendPinnedQuotesFromOtherSites(){try{let t=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");if(this.lastPageUrl,0===t.length)return;t.forEach((t,e)=>{let i=this.createPinnedQuoteElement(t,`pinned-${e}`);this.quotesContainer.appendChild(i)})}catch(e){console.error("Failed to append pinned quotes from other sites:",e)}}createPinnedQuoteElement(t,e){let i=document.createElement("div");i.className="quote-item pinned",i.setAttribute("data-pinned-id",e),i.innerHTML=`
            <div class="quote-pin" data-pinned-id="${e}" style="opacity: 1;">
                <img src="../media/Pin.png" alt="Pin" style="width: 16px; height: 19px;">
            </div>
            <div class="quote-text">"${t.quote}"</div>
            <div class="quote-actions">
                <button class="action-btn copy-btn" data-quote="${t.quote.replace(/"/g,"&quot;")}">
                    Copy Quote
                </button>
                <button class="action-btn generate-citation-btn" data-pinned-id="${e}" data-title="${t.pageTitle.replace(/"/g,"&quot;")}" data-url="${t.url.replace(/"/g,"&quot;")}">
                    Generate Citation
                </button>
                <div class="quote-help" data-help="Pinned from ${t.pageTitle}">
                    <img src="../media/Question Mark.png" alt="?" style="width: 16px; height: 16px;">
                </div>
            </div>
            <div class="citation-display" id="citation-${e}" style="display: none;"></div>
        `;let n=i.querySelector(".copy-btn"),a=i.querySelector(".generate-citation-btn"),o=i.querySelector(".quote-pin");if(n.addEventListener("click",()=>{let t=n.getAttribute("data-quote");this.copyQuote(t),n.classList.add("pop-animation"),setTimeout(()=>{n.classList.remove("pop-animation")},300)}),o.addEventListener("click",()=>{this.removePinnedQuote(e,t.quote)}),a.addEventListener("click",()=>{let t=a.getAttribute("data-pinned-id"),e=a.getAttribute("data-title"),i=a.getAttribute("data-url"),n=document.getElementById(`citation-${t}`);n&&""!==n.innerHTML.trim()?this.toggleCitation(t):this.generateCitation(t,e,i)}),t.citation){let r=i.querySelector(`#citation-${e}`);if(r){r.innerHTML=t.citation;let s=!1!==t.citationVisible;r.style.display=s?"block":"none",a.innerHTML=s?"Hide Citation":"Generate Citation"}}return i}removePinnedQuote(t,e){try{let i=document.querySelector(`[data-pinned-id="${t}"]`);i&&i.remove();let n=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),a=n.filter(t=>t.quote!==e);localStorage.setItem("quotely_pinned",JSON.stringify(a))}catch(o){console.error("Failed to remove pinned quote:",o)}}checkAndRestorePins(){try{JSON.parse(localStorage.getItem("quotely_pinned")||"[]");let t=document.querySelectorAll("#quotes-container .quote-item");t.length>0&&this.lastPageUrl&&this.restorePinnedState()}catch(e){console.error("Failed to check and restore pins:",e)}}updatePinnedStorage(){try{JSON.parse(localStorage.getItem("quotely_pinned")||"[]");let t=document.querySelectorAll("#quotes-container .quote-item"),e=[];t.forEach(t=>{if(t.classList.contains("pinned")){let i=t.querySelector(".quote-pin");if(i){let n=parseInt(i.getAttribute("data-index")),a=t.querySelector(".quote-text").textContent.replace(/"/g,""),o=document.getElementById(`citation-${n}`),r=o&&""!==o.innerHTML.trim(),s={index:n,quote:a,url:this.lastPageUrl,pageTitle:this.lastPageTitle,citation:r?o.innerHTML:null,citationVisible:r&&"none"!==o.style.display,timestamp:Date.now()};e.push(s)}}}),localStorage.setItem("quotely_pinned",JSON.stringify(e))}catch(i){console.error("Failed to update pinned storage:",i)}}toggleCitation(t){let e=document.getElementById(`citation-${t}`),i,n;if("string"==typeof t&&t.startsWith("pinned-")){i=document.querySelector(`[data-pinned-id="${t}"].generate-citation-btn`);let a=i?.closest(".quote-item");a&&(n=a.querySelector(".quote-text").textContent.replace(/"/g,""))}else{let o=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");o&&(i=o.querySelector(".generate-citation-btn"),n=o.querySelector(".quote-text").textContent.replace(/"/g,""))}"none"===e.style.display||""===e.style.display?(e.style.display="block",i.innerHTML="Hide Citation",this.updateQuoteCitationState(n,!0,!0)):(e.style.display="none",i.innerHTML="Show Citation",this.updateQuoteCitationState(n,!0,!1))}getQuotesList(){try{return JSON.parse(localStorage.getItem(this.quotesKey)||"[]")}catch(t){return console.error("Failed to get quotes list:",t),[]}}saveQuotesList(t){try{localStorage.setItem(this.quotesKey,JSON.stringify(t))}catch(e){console.error("Failed to save quotes list:",e)}}updateQuoteCitationState(t,e,i,n=null){try{let a=this.getQuotesList(),o=this.lastPageUrl;if(!o)return;let r=a.find(e=>e.quoteText===t&&e.pageUrl===o);r||(r={quoteText:t,pageUrl:o,pageTitle:this.lastPageTitle,hasCitation:!1,isVisible:!1,citationData:null,timestamp:Date.now()},a.push(r)),r.hasCitation=e,r.isVisible=i,n&&(r.citationData=n),r.timestamp=Date.now(),this.saveQuotesList(a)}catch(s){console.error("Failed to update quote citation state:",s)}}getQuoteCitationState(t){try{let e=this.getQuotesList(),i=this.lastPageUrl;if(!i)return{hasCitation:!1,isVisible:!1,citationData:null};let n=e.find(e=>e.quoteText===t&&e.pageUrl===i);if(n)return{hasCitation:n.hasCitation||!1,isVisible:n.isVisible||!1,citationData:n.citationData||null};return{hasCitation:!1,isVisible:!1,citationData:null}}catch(a){return console.error("Failed to get quote citation state:",a),{hasCitation:!1,isVisible:!1,citationData:null}}}clearCurrentPageQuotes(){try{let t=this.getQuotesList(),e=this.lastPageUrl;if(!e)return;let i=t.filter(t=>t.pageUrl!==e);this.saveQuotesList(i)}catch(n){console.error("Failed to clear current page quotes:",n)}}restoreAllCitationStates(){try{let t=document.querySelectorAll("#quotes-container .quote-item");t.forEach(t=>{let e=t.querySelector(".quote-text").textContent.replace(/"/g,""),i=this.getQuoteCitationState(e);i.hasCitation&&this.displayStoredCitationByQuote(e,i)})}catch(e){console.error("Failed to restore citation states:",e)}}togglePin(t,e){let i=e.closest(".quote-item"),n=i.classList.contains("pinned");n?(i.classList.remove("pinned"),e.style.opacity="0.5",this.removeFromPinned(t)):(i.classList.add("pinned"),e.style.opacity="1",this.addToPinned(t)),this.reorderQuotes(),this.updatePinnedStorage()}addToPinned(t){try{let e=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),i=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");if(!i)return;let n=i.querySelector(".quote-text").textContent.replace(/"/g,""),a=document.getElementById(`citation-${t}`),o=a&&""!==a.innerHTML.trim(),r={index:t,quote:n,url:this.lastPageUrl,pageTitle:this.lastPageTitle,citation:o?a.innerHTML:null,citationVisible:o&&"none"!==a.style.display,timestamp:Date.now()},s=e.find(t=>t.quote===n);s||(e.push(r),localStorage.setItem("quotely_pinned",JSON.stringify(e)))}catch(l){console.error("Failed to pin quote:",l)}}removeFromPinned(t){try{let e=JSON.parse(localStorage.getItem("quotely_pinned")||"[]"),i=document.querySelector(`#quotes-container .quote-item .quote-pin[data-index="${t}"]`)?.closest(".quote-item");if(!i)return;let n=i.querySelector(".quote-text").textContent.replace(/"/g,""),a=e.filter(t=>t.quote!==n);localStorage.setItem("quotely_pinned",JSON.stringify(a))}catch(o){console.error("Failed to unpin quote:",o)}}reorderQuotes(){let t=document.getElementById("quotes-container"),e=Array.from(t.children),i=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");e.sort((t,e)=>{let n=parseInt(t.querySelector(".quote-pin").getAttribute("data-index")),a=parseInt(e.querySelector(".quote-pin").getAttribute("data-index")),o=t.querySelector(".quote-text").textContent.replace(/"/g,""),r=e.querySelector(".quote-text").textContent.replace(/"/g,""),s=i.some(t=>t.quote===o),l=i.some(t=>t.quote===r);return s&&!l?-1:!s&&l?1:n-a}),e.forEach(e=>t.appendChild(e)),setTimeout(()=>{this.restoreCitations()},100)}restorePinnedState(){try{let t=JSON.parse(localStorage.getItem("quotely_pinned")||"[]");if(0===t.length)return;let e=document.querySelectorAll("#quotes-container .quote-item:not([data-pinned-id])");if(0===e.length)return;let i=0;e.forEach((e,n)=>{let a=e.querySelector(".quote-pin");if(a){let o=parseInt(a.getAttribute("data-index")),r=e.querySelector(".quote-text").textContent.replace(/"/g,""),s=t.find(t=>t.quote===r);if(s){e.classList.add("pinned"),a.style.opacity="1",i++;let l=document.getElementById(`citation-${o}`);if(s.citation&&l){l.innerHTML=s.citation;let c=!1!==s.citationVisible;l.style.display=c?"block":"none";let d=e.querySelector(".generate-citation-btn");d&&(d.innerHTML=c?"Hide Citation":"Generate Citation")}}}}),this.reorderQuotes(),this.restoreCitations()}catch(n){console.error("Failed to restore pinned state:",n)}}}document.addEventListener("DOMContentLoaded",()=>{window.quotelyPopup=new QuotelyPopup});